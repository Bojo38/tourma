/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package teamma.views;

import java.awt.Dimension;
import java.awt.DisplayMode;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import javax.swing.JEditorPane;
import javax.swing.JOptionPane;
import teamma.data.Player;
import teamma.data.PlayerType;
import teamma.data.Roster;
import teamma.data.Skill;
import teamma.data.lrb;
import teamma.data.RosterType;
import teamma.data.StarPlayer;
import teamma.tableModel.mjtTeamPlayers;
import teamma.tableModel.mjtTeamStars;
import tourma.MainFrame;
import tourma.data.Coach;
import tourma.data.Tournament;

/**
 *
 * @author WFMJ7631
 */
public class JdgRoster extends javax.swing.JDialog {
    
    Roster _data = null;
    Coach _coach=null;

    /**
     * Creates new form JdgRoster
     */
    public JdgRoster(java.awt.Frame parent, boolean modal) {
        this(parent,null,modal);       
    }
    
     public JdgRoster(java.awt.Frame parent, Coach coach, boolean modal) {
        super(parent, modal);
        _coach=coach;
        if (_coach!=null)
        {
          if (_coach.mComposition!=null)
          {
              _data=_coach.mComposition;
          }
          else
          {
              _coach.mComposition = new Roster();
          }
        }
        else
        {
            _coach=new Coach();
            _coach.mComposition = new Roster();
        }
         _data=_coach.mComposition;
        initComponents();
        
        
        this.setPreferredSize(new Dimension(1024, 768));
        pack();
        
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice gs = ge.getDefaultScreenDevice();
        DisplayMode dmode = gs.getDisplayMode();
        
        this.setSize(1024, 768);
        
        if (dmode != null) {
            int screenWidth = dmode.getWidth();
            int screenHeight = dmode.getHeight();
            this.setLocation((screenWidth - this.getWidth()) / 2, (screenHeight - this.getHeight()) / 2);
        }
        
        update();
        jbtAddSkill.setEnabled(false);
        jbtRemoveSkill.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"})
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtpGoods = new javax.swing.JTabbedPane();
        jPanel14 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jslAssists = new javax.swing.JSlider();
        jlbNbAssists = new javax.swing.JLabel();
        jlbNbAssists1 = new javax.swing.JLabel();
        jlbPriceAssist = new javax.swing.JLabel();
        jlbNbAssists3 = new javax.swing.JLabel();
        jlbCostAssists = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jslCheerleaders = new javax.swing.JSlider();
        jlbNbCherrleaders = new javax.swing.JLabel();
        jlbNbAssists2 = new javax.swing.JLabel();
        jlbPriceCheerleaders = new javax.swing.JLabel();
        jlbNbAssists4 = new javax.swing.JLabel();
        jlbCostCheerleaders = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jslFanFactor = new javax.swing.JSlider();
        jlbNbFanFactor = new javax.swing.JLabel();
        jlbNbAssists5 = new javax.swing.JLabel();
        jlbPriceFanFactor = new javax.swing.JLabel();
        jlbNbAssists6 = new javax.swing.JLabel();
        jlbCostFanFactor = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jslReroll = new javax.swing.JSlider();
        jlbNbReroll = new javax.swing.JLabel();
        jlbNbAssists8 = new javax.swing.JLabel();
        jlbPriceReroll = new javax.swing.JLabel();
        jlbNbAssists9 = new javax.swing.JLabel();
        jlbCostReroll = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jlbApothecary = new javax.swing.JLabel();
        jslApothecary = new javax.swing.JSlider();
        jlbNbApothecary = new javax.swing.JLabel();
        jlbX10 = new javax.swing.JLabel();
        jlbPriceApothecary = new javax.swing.JLabel();
        jlbX20 = new javax.swing.JLabel();
        jlbCostApothecary = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jslExtraReroll = new javax.swing.JSlider();
        jlbNbExtraReroll = new javax.swing.JLabel();
        jlbX = new javax.swing.JLabel();
        jlbPriceExtraReroll = new javax.swing.JLabel();
        jlbX1 = new javax.swing.JLabel();
        jlbCostExtraReroll = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jslBribeTheRef = new javax.swing.JSlider();
        jlbNbBribeTheRef = new javax.swing.JLabel();
        jlbX2 = new javax.swing.JLabel();
        jlbPriceBribeTheRef = new javax.swing.JLabel();
        jlbX3 = new javax.swing.JLabel();
        jlbCostBribeTheRef = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jslLocalApothecary = new javax.swing.JSlider();
        jlbNbLocalApothecary = new javax.swing.JLabel();
        jlbX4 = new javax.swing.JLabel();
        jlbPriceLocalApothecary = new javax.swing.JLabel();
        jlbX5 = new javax.swing.JLabel();
        jlbCostLocalApothecary = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jslWizard = new javax.swing.JSlider();
        jlbNbWizard = new javax.swing.JLabel();
        jlbX6 = new javax.swing.JLabel();
        jlbPriceWizard = new javax.swing.JLabel();
        jlbX7 = new javax.swing.JLabel();
        jlbCostWizard = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jslIgor = new javax.swing.JSlider();
        jlbNbIgor = new javax.swing.JLabel();
        jlbX8 = new javax.swing.JLabel();
        jlbPriceIgor = new javax.swing.JLabel();
        jlbX9 = new javax.swing.JLabel();
        jlbCostIgor = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jslCardBudget = new javax.swing.JSlider();
        jlbX11 = new javax.swing.JLabel();
        jlbCostCard = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jlbBabes = new javax.swing.JLabel();
        jslBabes = new javax.swing.JSlider();
        jlbNbBabes = new javax.swing.JLabel();
        jlbX12 = new javax.swing.JLabel();
        jlbPriceBabes = new javax.swing.JLabel();
        jlbX13 = new javax.swing.JLabel();
        jlbCostBabes = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbStars = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jbtAddStar = new javax.swing.JButton();
        jbtRemoveStar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jlbIcon = new javax.swing.JButton();
        jbtSelectCoach = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jcbWithSkills = new javax.swing.JCheckBox();
        jLabel17 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jlbTotalCost = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jlbRanking = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jpnCenter = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jbtAdd = new javax.swing.JButton();
        jbtRemove = new javax.swing.JButton();
        jbtAddSkill = new javax.swing.JButton();
        jbtRemoveSkill = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbPlayers = new javax.swing.JTable();
        jpnTitle = new javax.swing.JPanel();
        jlbTeamName = new javax.swing.JLabel();
        jlbRosterType = new javax.swing.JLabel();
        jlbCoachName = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jbtOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1024, 724));

        jPanel14.setMinimumSize(new java.awt.Dimension(400, 260));
        jPanel14.setPreferredSize(new java.awt.Dimension(300, 150));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Assistants :");
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel3.add(jLabel1);

        jslAssists.setMajorTickSpacing(5);
        jslAssists.setMaximum(10);
        jslAssists.setMinorTickSpacing(1);
        jslAssists.setPaintTicks(true);
        jslAssists.setSnapToTicks(true);
        jslAssists.setValue(0);
        jslAssists.setPreferredSize(new java.awt.Dimension(80, 30));
        jslAssists.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslAssistsStateChanged(evt);
            }
        });
        jPanel3.add(jslAssists);

        jlbNbAssists.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbAssists.setText("0");
        jlbNbAssists.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel3.add(jlbNbAssists);

        jlbNbAssists1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbAssists1.setText("X");
        jlbNbAssists1.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel3.add(jlbNbAssists1);

        jlbPriceAssist.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbPriceAssist.setText("10 000");
        jlbPriceAssist.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel3.add(jlbPriceAssist);

        jlbNbAssists3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbAssists3.setText("=");
        jlbNbAssists3.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel3.add(jlbNbAssists3);

        jlbCostAssists.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbCostAssists.setText("0");
        jlbCostAssists.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel3.add(jlbCostAssists);

        jPanel14.add(jPanel3);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Pom Pom girls :");
        jLabel8.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel15.add(jLabel8);

        jslCheerleaders.setMajorTickSpacing(5);
        jslCheerleaders.setMaximum(10);
        jslCheerleaders.setMinorTickSpacing(1);
        jslCheerleaders.setPaintTicks(true);
        jslCheerleaders.setSnapToTicks(true);
        jslCheerleaders.setValue(0);
        jslCheerleaders.setPreferredSize(new java.awt.Dimension(80, 30));
        jslCheerleaders.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslCheerleadersStateChanged(evt);
            }
        });
        jPanel15.add(jslCheerleaders);

        jlbNbCherrleaders.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbCherrleaders.setText("0");
        jlbNbCherrleaders.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel15.add(jlbNbCherrleaders);

        jlbNbAssists2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbAssists2.setText("X");
        jlbNbAssists2.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel15.add(jlbNbAssists2);

        jlbPriceCheerleaders.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbPriceCheerleaders.setText("10 000");
        jlbPriceCheerleaders.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel15.add(jlbPriceCheerleaders);

        jlbNbAssists4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbAssists4.setText("=");
        jlbNbAssists4.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel15.add(jlbNbAssists4);

        jlbCostCheerleaders.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbCostCheerleaders.setText("0");
        jlbCostCheerleaders.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel15.add(jlbCostCheerleaders);

        jPanel14.add(jPanel15);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel9.setText("Popularité :");
        jLabel9.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel16.add(jLabel9);

        jslFanFactor.setMajorTickSpacing(5);
        jslFanFactor.setMaximum(18);
        jslFanFactor.setMinorTickSpacing(1);
        jslFanFactor.setPaintTicks(true);
        jslFanFactor.setSnapToTicks(true);
        jslFanFactor.setValue(0);
        jslFanFactor.setPreferredSize(new java.awt.Dimension(80, 30));
        jslFanFactor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslFanFactorStateChanged(evt);
            }
        });
        jPanel16.add(jslFanFactor);

        jlbNbFanFactor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbFanFactor.setText("0");
        jlbNbFanFactor.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel16.add(jlbNbFanFactor);

        jlbNbAssists5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbAssists5.setText("X");
        jlbNbAssists5.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel16.add(jlbNbAssists5);

        jlbPriceFanFactor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbPriceFanFactor.setText("10 000");
        jlbPriceFanFactor.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel16.add(jlbPriceFanFactor);

        jlbNbAssists6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbAssists6.setText("=");
        jlbNbAssists6.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel16.add(jlbNbAssists6);

        jlbCostFanFactor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbCostFanFactor.setText("0");
        jlbCostFanFactor.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel16.add(jlbCostFanFactor);

        jPanel14.add(jPanel16);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("Relances :");
        jLabel10.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel17.add(jLabel10);

        jslReroll.setMajorTickSpacing(5);
        jslReroll.setMaximum(8);
        jslReroll.setMinorTickSpacing(1);
        jslReroll.setPaintTicks(true);
        jslReroll.setSnapToTicks(true);
        jslReroll.setValue(0);
        jslReroll.setPreferredSize(new java.awt.Dimension(80, 30));
        jslReroll.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslRerollStateChanged(evt);
            }
        });
        jPanel17.add(jslReroll);

        jlbNbReroll.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbReroll.setText("0");
        jlbNbReroll.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel17.add(jlbNbReroll);

        jlbNbAssists8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbAssists8.setText("X");
        jlbNbAssists8.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel17.add(jlbNbAssists8);

        jlbPriceReroll.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbPriceReroll.setText("10 000");
        jlbPriceReroll.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel17.add(jlbPriceReroll);

        jlbNbAssists9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbAssists9.setText("=");
        jlbNbAssists9.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel17.add(jlbNbAssists9);

        jlbCostReroll.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbCostReroll.setText("0");
        jlbCostReroll.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel17.add(jlbCostReroll);

        jPanel14.add(jPanel17);

        jlbApothecary.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jlbApothecary.setText("Apothecary :");
        jlbApothecary.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel18.add(jlbApothecary);

        jslApothecary.setMajorTickSpacing(1);
        jslApothecary.setMaximum(1);
        jslApothecary.setMinorTickSpacing(1);
        jslApothecary.setPaintTicks(true);
        jslApothecary.setSnapToTicks(true);
        jslApothecary.setValue(0);
        jslApothecary.setPreferredSize(new java.awt.Dimension(80, 30));
        jslApothecary.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslApothecaryStateChanged(evt);
            }
        });
        jPanel18.add(jslApothecary);

        jlbNbApothecary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbApothecary.setText("0");
        jlbNbApothecary.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel18.add(jlbNbApothecary);

        jlbX10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbX10.setText("X");
        jlbX10.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel18.add(jlbX10);

        jlbPriceApothecary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbPriceApothecary.setText("50 000");
        jlbPriceApothecary.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel18.add(jlbPriceApothecary);

        jlbX20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbX20.setText("=");
        jlbX20.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel18.add(jlbX20);

        jlbCostApothecary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbCostApothecary.setText("0");
        jlbCostApothecary.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel18.add(jlbCostApothecary);

        jPanel14.add(jPanel18);
        jPanel14.add(jPanel19);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("tourma/languages/language"); // NOI18N
        jtpGoods.addTab(bundle.getString("TeamGoods"), jPanel14); // NOI18N

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("Mercenaires et Champions"))); // NOI18N
        jPanel8.setPreferredSize(new java.awt.Dimension(200, 250));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Extra Reroll");
        jLabel2.setPreferredSize(new java.awt.Dimension(120, 14));
        jPanel1.add(jLabel2);

        jslExtraReroll.setMajorTickSpacing(2);
        jslExtraReroll.setMaximum(4);
        jslExtraReroll.setMinorTickSpacing(1);
        jslExtraReroll.setPaintTicks(true);
        jslExtraReroll.setSnapToTicks(true);
        jslExtraReroll.setValue(0);
        jslExtraReroll.setMaximumSize(new java.awt.Dimension(50, 23));
        jslExtraReroll.setMinimumSize(new java.awt.Dimension(30, 23));
        jslExtraReroll.setPreferredSize(new java.awt.Dimension(50, 23));
        jslExtraReroll.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslExtraRerollStateChanged(evt);
            }
        });
        jPanel1.add(jslExtraReroll);

        jlbNbExtraReroll.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbExtraReroll.setLabelFor(jslExtraReroll);
        jlbNbExtraReroll.setText("0");
        jlbNbExtraReroll.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel1.add(jlbNbExtraReroll);

        jlbX.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbX.setText("x");
        jlbX.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel1.add(jlbX);

        jlbPriceExtraReroll.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbPriceExtraReroll.setText("100 000");
        jlbPriceExtraReroll.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel1.add(jlbPriceExtraReroll);

        jlbX1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbX1.setText("=");
        jlbX1.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel1.add(jlbX1);

        jlbCostExtraReroll.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbCostExtraReroll.setText("0");
        jlbCostExtraReroll.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel1.add(jlbCostExtraReroll);

        jPanel8.add(jPanel1);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Bribe the Ref");
        jLabel3.setPreferredSize(new java.awt.Dimension(120, 14));
        jPanel9.add(jLabel3);

        jslBribeTheRef.setMajorTickSpacing(2);
        jslBribeTheRef.setMaximum(4);
        jslBribeTheRef.setMinorTickSpacing(1);
        jslBribeTheRef.setPaintTicks(true);
        jslBribeTheRef.setSnapToTicks(true);
        jslBribeTheRef.setValue(0);
        jslBribeTheRef.setMaximumSize(new java.awt.Dimension(50, 23));
        jslBribeTheRef.setMinimumSize(new java.awt.Dimension(30, 23));
        jslBribeTheRef.setPreferredSize(new java.awt.Dimension(50, 23));
        jslBribeTheRef.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslBribeTheRefStateChanged(evt);
            }
        });
        jPanel9.add(jslBribeTheRef);

        jlbNbBribeTheRef.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbBribeTheRef.setLabelFor(jslBribeTheRef);
        jlbNbBribeTheRef.setText("0");
        jlbNbBribeTheRef.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel9.add(jlbNbBribeTheRef);

        jlbX2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbX2.setText("x");
        jlbX2.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel9.add(jlbX2);

        jlbPriceBribeTheRef.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbPriceBribeTheRef.setText("100 000");
        jlbPriceBribeTheRef.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel9.add(jlbPriceBribeTheRef);

        jlbX3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbX3.setText("=");
        jlbX3.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel9.add(jlbX3);

        jlbCostBribeTheRef.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbCostBribeTheRef.setText("0");
        jlbCostBribeTheRef.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel9.add(jlbCostBribeTheRef);

        jPanel8.add(jPanel9);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Local Apothecary");
        jLabel4.setPreferredSize(new java.awt.Dimension(120, 14));
        jPanel10.add(jLabel4);

        jslLocalApothecary.setMajorTickSpacing(2);
        jslLocalApothecary.setMaximum(4);
        jslLocalApothecary.setMinorTickSpacing(1);
        jslLocalApothecary.setPaintTicks(true);
        jslLocalApothecary.setSnapToTicks(true);
        jslLocalApothecary.setValue(0);
        jslLocalApothecary.setMaximumSize(new java.awt.Dimension(50, 23));
        jslLocalApothecary.setMinimumSize(new java.awt.Dimension(30, 23));
        jslLocalApothecary.setPreferredSize(new java.awt.Dimension(50, 23));
        jslLocalApothecary.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslLocalApothecaryStateChanged(evt);
            }
        });
        jPanel10.add(jslLocalApothecary);

        jlbNbLocalApothecary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbLocalApothecary.setLabelFor(jslLocalApothecary);
        jlbNbLocalApothecary.setText("0");
        jlbNbLocalApothecary.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel10.add(jlbNbLocalApothecary);

        jlbX4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbX4.setText("x");
        jlbX4.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel10.add(jlbX4);

        jlbPriceLocalApothecary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbPriceLocalApothecary.setText("100 000");
        jlbPriceLocalApothecary.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel10.add(jlbPriceLocalApothecary);

        jlbX5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbX5.setText("=");
        jlbX5.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel10.add(jlbX5);

        jlbCostLocalApothecary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbCostLocalApothecary.setText("0");
        jlbCostLocalApothecary.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel10.add(jlbCostLocalApothecary);

        jPanel8.add(jPanel10);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Wizard");
        jLabel5.setPreferredSize(new java.awt.Dimension(120, 14));
        jPanel11.add(jLabel5);

        jslWizard.setMajorTickSpacing(1);
        jslWizard.setMaximum(1);
        jslWizard.setPaintTicks(true);
        jslWizard.setSnapToTicks(true);
        jslWizard.setValue(0);
        jslWizard.setMaximumSize(new java.awt.Dimension(50, 23));
        jslWizard.setMinimumSize(new java.awt.Dimension(30, 23));
        jslWizard.setPreferredSize(new java.awt.Dimension(50, 23));
        jslWizard.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslWizardStateChanged(evt);
            }
        });
        jPanel11.add(jslWizard);

        jlbNbWizard.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbWizard.setLabelFor(jslWizard);
        jlbNbWizard.setText("0");
        jlbNbWizard.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel11.add(jlbNbWizard);

        jlbX6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbX6.setText("x");
        jlbX6.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel11.add(jlbX6);

        jlbPriceWizard.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbPriceWizard.setText("150 000");
        jlbPriceWizard.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel11.add(jlbPriceWizard);

        jlbX7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbX7.setText("=");
        jlbX7.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel11.add(jlbX7);

        jlbCostWizard.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbCostWizard.setText("0");
        jlbCostWizard.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel11.add(jlbCostWizard);

        jPanel8.add(jPanel11);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Igor");
        jLabel6.setPreferredSize(new java.awt.Dimension(120, 14));
        jPanel12.add(jLabel6);

        jslIgor.setMajorTickSpacing(1);
        jslIgor.setMaximum(1);
        jslIgor.setMinorTickSpacing(1);
        jslIgor.setPaintTicks(true);
        jslIgor.setSnapToTicks(true);
        jslIgor.setValue(0);
        jslIgor.setMaximumSize(new java.awt.Dimension(50, 23));
        jslIgor.setMinimumSize(new java.awt.Dimension(30, 23));
        jslIgor.setPreferredSize(new java.awt.Dimension(50, 23));
        jslIgor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslIgorStateChanged(evt);
            }
        });
        jPanel12.add(jslIgor);

        jlbNbIgor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbIgor.setLabelFor(jslIgor);
        jlbNbIgor.setText("0");
        jlbNbIgor.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel12.add(jlbNbIgor);

        jlbX8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbX8.setText("x");
        jlbX8.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel12.add(jlbX8);

        jlbPriceIgor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbPriceIgor.setText("100 000");
        jlbPriceIgor.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel12.add(jlbPriceIgor);

        jlbX9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbX9.setText("=");
        jlbX9.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel12.add(jlbX9);

        jlbCostIgor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbCostIgor.setText("0");
        jlbCostIgor.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel12.add(jlbCostIgor);

        jPanel8.add(jPanel12);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Card Budget");
        jLabel7.setPreferredSize(new java.awt.Dimension(120, 14));
        jPanel13.add(jLabel7);

        jslCardBudget.setMajorTickSpacing(200000);
        jslCardBudget.setMaximum(1000000);
        jslCardBudget.setMinorTickSpacing(50000);
        jslCardBudget.setPaintTicks(true);
        jslCardBudget.setSnapToTicks(true);
        jslCardBudget.setValue(0);
        jslCardBudget.setMaximumSize(new java.awt.Dimension(50, 23));
        jslCardBudget.setMinimumSize(new java.awt.Dimension(30, 23));
        jslCardBudget.setPreferredSize(new java.awt.Dimension(155, 23));
        jslCardBudget.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslCardBudgetStateChanged(evt);
            }
        });
        jPanel13.add(jslCardBudget);

        jlbX11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbX11.setText("=");
        jlbX11.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel13.add(jlbX11);

        jlbCostCard.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbCostCard.setLabelFor(jslCardBudget);
        jlbCostCard.setText("0");
        jlbCostCard.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel13.add(jlbCostCard);

        jPanel8.add(jPanel13);

        jlbBabes.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jlbBabes.setText("Bloodweiser Babes");
        jlbBabes.setPreferredSize(new java.awt.Dimension(120, 14));
        jPanel21.add(jlbBabes);

        jslBabes.setMajorTickSpacing(1);
        jslBabes.setMaximum(2);
        jslBabes.setPaintTicks(true);
        jslBabes.setSnapToTicks(true);
        jslBabes.setValue(0);
        jslBabes.setMaximumSize(new java.awt.Dimension(50, 23));
        jslBabes.setMinimumSize(new java.awt.Dimension(30, 23));
        jslBabes.setPreferredSize(new java.awt.Dimension(50, 23));
        jslBabes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslBabesStateChanged(evt);
            }
        });
        jPanel21.add(jslBabes);

        jlbNbBabes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNbBabes.setLabelFor(jslExtraReroll);
        jlbNbBabes.setText("0");
        jlbNbBabes.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel21.add(jlbNbBabes);

        jlbX12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbX12.setText("x");
        jlbX12.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel21.add(jlbX12);

        jlbPriceBabes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbPriceBabes.setText("50 000");
        jlbPriceBabes.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel21.add(jlbPriceBabes);

        jlbX13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbX13.setText("=");
        jlbX13.setPreferredSize(new java.awt.Dimension(10, 14));
        jPanel21.add(jlbX13);

        jlbCostBabes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbCostBabes.setText("0");
        jlbCostBabes.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel21.add(jlbCostBabes);

        jPanel8.add(jPanel21);

        jtpGoods.addTab(bundle.getString("Inducements"), jPanel8); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("Mercenaires et Champions"))); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(160, 150));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jtbStars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbStars.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbStarsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtbStars);

        jPanel4.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel5.setMinimumSize(new java.awt.Dimension(120, 100));
        jPanel5.setPreferredSize(new java.awt.Dimension(100, 160));

        jbtAddStar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tourma/images/Add.png"))); // NOI18N
        jbtAddStar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtAddStar.setLabel(bundle.getString("Star")); // NOI18N
        jbtAddStar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtAddStar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddStarActionPerformed(evt);
            }
        });
        jPanel5.add(jbtAddStar);

        jbtRemoveStar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tourma/images/Close.png"))); // NOI18N
        jbtRemoveStar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtRemoveStar.setLabel(bundle.getString("Star")); // NOI18N
        jbtRemoveStar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtRemoveStar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRemoveStarActionPerformed(evt);
            }
        });
        jPanel5.add(jbtRemoveStar);

        jPanel4.add(jPanel5, java.awt.BorderLayout.WEST);

        jtpGoods.addTab(bundle.getString("Mercenaires et Champions"), jPanel4); // NOI18N

        jPanel7.setLayout(new java.awt.BorderLayout());

        jlbIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teamma/images/what.png"))); // NOI18N
        jlbIcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlbIconActionPerformed(evt);
            }
        });
        jPanel22.add(jlbIcon);

        jbtSelectCoach.setText("Associer un coach");
        jbtSelectCoach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSelectCoachActionPerformed(evt);
            }
        });
        jPanel22.add(jbtSelectCoach);

        jPanel7.add(jPanel22, java.awt.BorderLayout.CENTER);

        jcbWithSkills.setText("Inclure les compétences");
        jcbWithSkills.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbWithSkillsActionPerformed(evt);
            }
        });
        jPanel20.add(jcbWithSkills);

        jLabel17.setText(" ");
        jPanel20.add(jLabel17);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Prix total");
        jPanel20.add(jLabel12);

        jlbTotalCost.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jlbTotalCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbTotalCost.setText("0");
        jPanel20.add(jlbTotalCost);

        jLabel16.setText(" ");
        jPanel20.add(jLabel16);

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Classement");
        jPanel20.add(jLabel15);

        jlbRanking.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jlbRanking.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbRanking.setText("0");
        jPanel20.add(jlbRanking);

        jLabel18.setText(" ");
        jPanel20.add(jLabel18);

        jPanel7.add(jPanel20, java.awt.BorderLayout.SOUTH);

        jtpGoods.addTab("Coach", jPanel7);

        getContentPane().add(jtpGoods, java.awt.BorderLayout.CENTER);

        jpnCenter.setMinimumSize(new java.awt.Dimension(640, 200));
        jpnCenter.setPreferredSize(new java.awt.Dimension(320, 430));
        jpnCenter.setLayout(new java.awt.BorderLayout());

        jPanel2.setPreferredSize(new java.awt.Dimension(100, 100));

        jbtAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tourma/images/Add.png"))); // NOI18N
        jbtAdd.setText(bundle.getString("Player")); // NOI18N
        jbtAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtAdd.setPreferredSize(new java.awt.Dimension(100, 60));
        jbtAdd.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jbtAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddActionPerformed(evt);
            }
        });
        jPanel2.add(jbtAdd);

        jbtRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tourma/images/Close.png"))); // NOI18N
        jbtRemove.setText(bundle.getString("Player")); // NOI18N
        jbtRemove.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtRemove.setPreferredSize(new java.awt.Dimension(100, 60));
        jbtRemove.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRemoveActionPerformed(evt);
            }
        });
        jPanel2.add(jbtRemove);

        jbtAddSkill.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tourma/images/Add.png"))); // NOI18N
        jbtAddSkill.setText(bundle.getString("Skill")); // NOI18N
        jbtAddSkill.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtAddSkill.setPreferredSize(new java.awt.Dimension(100, 60));
        jbtAddSkill.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jbtAddSkill.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtAddSkill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddSkillActionPerformed(evt);
            }
        });
        jPanel2.add(jbtAddSkill);

        jbtRemoveSkill.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tourma/images/Close.png"))); // NOI18N
        jbtRemoveSkill.setText(bundle.getString("Skill")); // NOI18N
        jbtRemoveSkill.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtRemoveSkill.setPreferredSize(new java.awt.Dimension(100, 60));
        jbtRemoveSkill.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtRemoveSkill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRemoveSkillActionPerformed(evt);
            }
        });
        jPanel2.add(jbtRemoveSkill);

        jpnCenter.add(jPanel2, java.awt.BorderLayout.WEST);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(520, 100));

        jtbPlayers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbPlayers.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jtbPlayers.setPreferredSize(null);
        jtbPlayers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbPlayersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbPlayers);

        jpnCenter.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jpnTitle.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jpnTitle.setLayout(new java.awt.GridLayout(1, 3, 5, 5));

        jlbTeamName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlbTeamName.setText("TeamName");
        jpnTitle.add(jlbTeamName);

        jlbRosterType.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jlbRosterType.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbRosterType.setText("Roster: Unknown");
        jlbRosterType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbRosterTypeMouseClicked(evt);
            }
        });
        jpnTitle.add(jlbRosterType);

        jlbCoachName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jlbCoachName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jlbCoachName.setText("Coach: Unknown");
        jpnTitle.add(jlbCoachName);

        jpnCenter.add(jpnTitle, java.awt.BorderLayout.NORTH);

        getContentPane().add(jpnCenter, java.awt.BorderLayout.NORTH);

        jPanel6.setPreferredSize(new java.awt.Dimension(640, 50));

        jbtOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tourma/images/Select.png"))); // NOI18N
        jbtOK.setText("OK");
        jbtOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtOKActionPerformed(evt);
            }
        });
        jPanel6.add(jbtOK);

        getContentPane().add(jPanel6, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents
                
    private void jlbRosterTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbRosterTypeMouseClicked
        
        ArrayList<String> rosterlist = lrb.getLRB().getRosterTypeListAsString();
        String input = (String) JOptionPane.showInputDialog(this,
                "Choisissez le roster", "Choix du roster", JOptionPane.INFORMATION_MESSAGE,
                null, rosterlist.toArray(), "Amazons");
        RosterType rt = lrb.getLRB().getRosterType(input);
        if (_coach!=null)
        {
            _coach.mRoster=new tourma.data.RosterType(input);
        }
        if (rt != null) {
            if (_data._roster != rt) {
                _data._roster = rt;
                _data._players.clear();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Erreur de choix du roster: " + input);
        }
        
        jlbIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teamma/images/" + rt._image))); // NOI18N
        update();
        
    }//GEN-LAST:event_jlbRosterTypeMouseClicked
                                            
    private void jslAssistsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslAssistsStateChanged
        _data._assistants = jslAssists.getValue();
        update();
    }//GEN-LAST:event_jslAssistsStateChanged
    
    private void jslCheerleadersStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslCheerleadersStateChanged
        _data._cheerleaders = jslCheerleaders.getValue();
        update();
    }//GEN-LAST:event_jslCheerleadersStateChanged
    
    private void jslFanFactorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslFanFactorStateChanged
        _data._fanfactor = jslFanFactor.getValue();
        update();
    }//GEN-LAST:event_jslFanFactorStateChanged
    
    private void jslRerollStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslRerollStateChanged
        _data._rerolls = jslReroll.getValue();
        update();
    }//GEN-LAST:event_jslRerollStateChanged
    
    private void jslApothecaryStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslApothecaryStateChanged
        _data._apothecary = (jslApothecary.getValue() == 1);
        update();
    }//GEN-LAST:event_jslApothecaryStateChanged

    private void jcbWithSkillsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbWithSkillsActionPerformed
        update();
    }//GEN-LAST:event_jcbWithSkillsActionPerformed

    private void jbtSelectCoachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSelectCoachActionPerformed
       int i;
            /**
             * Build Avilable Positions
             */
            ArrayList<String> coachs_name = new ArrayList<String>();
            ArrayList<Coach> coaches=Tournament.getTournament().getCoachs();
            for (i = 0; i < coaches.size(); i++) {
                Coach c = coaches.get(i);
                coachs_name.add(c.mName);
            }
            
            String input = (String) JOptionPane.showInputDialog(this,
                    "Choisissez le coach", "Choix du coach", JOptionPane.INFORMATION_MESSAGE,
                    null, coachs_name.toArray(), coachs_name.get(0));
            if (!input.equals(""))
            {
                Coach c = Tournament.getTournament().getCoach(input);
                c.mComposition=_data;
                _coach=c;
                _coach.mRank=_data.getValue(false)/10000;
            }

    }//GEN-LAST:event_jbtSelectCoachActionPerformed

    private void jlbIconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlbIconActionPerformed
       jlbRosterTypeMouseClicked(null);
    }//GEN-LAST:event_jlbIconActionPerformed

    private void jbtOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtOKActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jbtOKActionPerformed

    private void jtbPlayersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbPlayersMouseClicked
        jbtAddSkill.setEnabled(jtbPlayers.getSelectedRow() > -1);
        boolean removable = false;
        int i = jtbPlayers.getSelectedRow();
        if (jtbPlayers.getSelectedRow() > -1) {
            if (_data._players.get(jtbPlayers.getSelectedRow())._skills.size() > 0) {
                removable = true;
            }
        }
        jbtRemoveSkill.setEnabled(removable);
    }//GEN-LAST:event_jtbPlayersMouseClicked

    private void jbtRemoveSkillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRemoveSkillActionPerformed
        int index = jtbPlayers.getSelectedRow();
        if (index > -1) {
            ArrayList<String> skills = new ArrayList<String>();
            Player p = _data._players.get(index);
            if (p._skills.size() > 0) {
                int i;
                for (i = 0; i < p._skills.size(); i++) {
                    Skill s = p._skills.get(i);
                    skills.add(s._name);
                }

                Object choice = JOptionPane.showInputDialog(MainFrame.getMainFrame(), "Select skill to remove", "Skill", JOptionPane.INFORMATION_MESSAGE, null, skills.toArray(), null);
                if (choice != null) {

                    for (i = 0; i < p._skills.size(); i++) {
                        if (p._skills.get(i)._name.equals(choice)) {
                            p._skills.remove(i);
                            break;
                        }
                    }
                }
            }
        }
        update();
    }//GEN-LAST:event_jbtRemoveSkillActionPerformed

    private void jbtAddSkillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddSkillActionPerformed
        int index = jtbPlayers.getSelectedRow();
        if (index > -1) {
            JdgSelectSkill jdg = new JdgSelectSkill(MainFrame.getMainFrame(), true, _data._players.get(index));
            jdg.setVisible(true);
        }
        update();
    }//GEN-LAST:event_jbtAddSkillActionPerformed

    private void jbtRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRemoveActionPerformed
        /* Get Selected line */
        int selectedLine = jtbPlayers.getSelectedRow();
        if (selectedLine > -1) {
            _data._players.remove(selectedLine);
            update();
        }

    }//GEN-LAST:event_jbtRemoveActionPerformed

    private void jbtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddActionPerformed
        if (_data._roster == null) {
            JOptionPane.showMessageDialog(this, "Roster type not selected, please click on roster");
        } else {
            int i;
            /**
            * Build Avilable Positions
            */
            ArrayList<String> positions = new ArrayList<String>();
            for (i = 0; i < _data._roster._player_types.size(); i++) {
                PlayerType pt = _data._roster._player_types.get(i);
                /*
                * Count the number of player possible
                */
                int limit = pt._limit;
                int j;
                for (j = 0; j < _data._players.size(); j++) {
                    if (_data._players.get(j)._playertype == pt) {
                        limit--;
                    }
                }
                if (limit > 0) {
                    positions.add(pt._position);
                }
            }

            String input = (String) JOptionPane.showInputDialog(this,
                "Choisissez le type de joueur", "Choix du joueur", JOptionPane.INFORMATION_MESSAGE,
                null, positions.toArray(), "Amazons");
            PlayerType pt = _data._roster.getPlayerType(input);
            Player p = new Player(pt);

            _data._players.add(p);
        }

        update();
    }//GEN-LAST:event_jbtAddActionPerformed

    private void jslBabesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslBabesStateChanged
        _data._bloodweiserbabes = jslBabes.getValue();
        update();
    }//GEN-LAST:event_jslBabesStateChanged

    private void jslCardBudgetStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslCardBudgetStateChanged
        _data._cards = jslCardBudget.getValue();
        update();
    }//GEN-LAST:event_jslCardBudgetStateChanged

    private void jslIgorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslIgorStateChanged
        _data._igor = jslIgor.getValue() == 1;
        update();
    }//GEN-LAST:event_jslIgorStateChanged

    private void jslWizardStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslWizardStateChanged
        _data._wizard = jslWizard.getValue() == 1;
        update();
    }//GEN-LAST:event_jslWizardStateChanged

    private void jslLocalApothecaryStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslLocalApothecaryStateChanged
        _data._localapothecary = jslLocalApothecary.getValue();
        update();
    }//GEN-LAST:event_jslLocalApothecaryStateChanged

    private void jslBribeTheRefStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslBribeTheRefStateChanged
        _data._corruptions = jslBribeTheRef.getValue();
        update();
    }//GEN-LAST:event_jslBribeTheRefStateChanged

    private void jslExtraRerollStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslExtraRerollStateChanged
        _data._extrarerolls = jslExtraReroll.getValue();
        update();
    }//GEN-LAST:event_jslExtraRerollStateChanged

    private void jbtRemoveStarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRemoveStarActionPerformed
        int i = jtbStars.getSelectedRow();
        if (i > -1) {
            _data._champions.remove(i);
        }
        update();
    }//GEN-LAST:event_jbtRemoveStarActionPerformed

    private void jbtAddStarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddStarActionPerformed
        if (_data._roster == null) {
            JOptionPane.showMessageDialog(this, "Roster type not selected, please click on roster");
        } else {
            int i, j;
            /**
            * Build Avilable Positions
            */
            ArrayList<String> names = new ArrayList<String>();
            for (i = 0; i < _data._roster._available_starplayers.size(); i++) {
                StarPlayer sp = _data._roster._available_starplayers.get(i);
                boolean found = false;
                for (j = 0; j < _data._champions.size(); j++) {
                    if (_data._champions.get(j)._name.equals(sp._name)) {
                        found = true;
                    }
                }
                if (!found) {
                    names.add(sp._name);
                }

            }

            String input = (String) JOptionPane.showInputDialog(this,
                "Choisissez le joueur", "Choix du joueur", JOptionPane.INFORMATION_MESSAGE,
                null, names.toArray(), "");
            StarPlayer sp = _data._roster.getStarPlayer(input);
            _data._champions.add(sp);
        }
        update();
    }//GEN-LAST:event_jbtAddStarActionPerformed

    private void jtbStarsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbStarsMouseClicked
        jbtRemoveStar.setEnabled(jtbStars.getSelectedRow() > -1);
    }//GEN-LAST:event_jtbStarsMouseClicked
    
    private void update() {
        if (_data._roster != null) {
            jlbRosterType.setText("Roster: " + _data._roster._name);
        } else {
            jlbRosterType.setText("Roster: Unknown");
        }
        
        if (_coach==null)
        {
            jbtSelectCoach.setText("Associer un coach");
        }
        else
        {
            jbtSelectCoach.setText(_coach.mName);
            jlbCoachName.setText("Coach: "+_coach.mName);
            if (_coach.mRoster!=null)
            {
                _data._roster=lrb.getLRB().getRosterType(_coach.mRoster.mName);
                if (_data._roster!=null)
                {
                    jlbIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teamma/images/" + _data._roster._image)));
                }
                jlbTeamName.setText(_coach.mTeam);
                jlbRosterType.setText("Roster: "+_data._roster._name);
            }
            _coach.mComposition=_data;
            _coach.mRank=_data.getValue(false)/10000;
        }
        
        jbtSelectCoach.setEnabled(Tournament.getTournament().GetActiveCoachNumber()>0);
        
        jbtAdd.setEnabled(_data._champions.size() + _data._players.size() < 16);
        jbtRemove.setEnabled(_data._players.size() > 0);

        /**
         * Players
         */
        mjtTeamPlayers playersModel = new mjtTeamPlayers(_data._players);
        
        
        if (_data._roster != null) {
            jlbPriceBribeTheRef.setText(Integer.toString(_data._roster._bribe_cost));
        }
        
        jtbPlayers.setModel(playersModel);
        jtbPlayers.getColumnModel().getColumn(0).setMinWidth(5);
        jtbPlayers.getColumnModel().getColumn(1).setMinWidth(80);
        jtbPlayers.getColumnModel().getColumn(2).setMinWidth(80);
        jtbPlayers.getColumnModel().getColumn(3).setMinWidth(5);
        jtbPlayers.getColumnModel().getColumn(4).setMinWidth(5);
        jtbPlayers.getColumnModel().getColumn(5).setMinWidth(5);
        jtbPlayers.getColumnModel().getColumn(6).setMinWidth(5);
        jtbPlayers.getColumnModel().getColumn(7).setMinWidth(200);
        jtbPlayers.getColumnModel().getColumn(8).setMinWidth(10);
        jtbPlayers.getColumnModel().getColumn(9).setMinWidth(10);
        jtbPlayers.getColumnModel().getColumn(10).setMinWidth(10);
        jtbPlayers.getColumnModel().getColumn(11).setMinWidth(10);

        /**
         * Star players
         */
        mjtTeamStars starsModel = new mjtTeamStars(_data._champions);
        jtbStars.setModel(starsModel);
        jtbStars.getColumnModel().getColumn(0).setMinWidth(80);
        jtbStars.getColumnModel().getColumn(1).setMinWidth(80);
        jtbStars.getColumnModel().getColumn(2).setMinWidth(5);
        jtbStars.getColumnModel().getColumn(3).setMinWidth(5);
        jtbStars.getColumnModel().getColumn(4).setMinWidth(5);
        jtbStars.getColumnModel().getColumn(5).setMinWidth(5);
        jtbStars.getColumnModel().getColumn(6).setMinWidth(500);
        jtbStars.getColumnModel().getColumn(7).setMinWidth(10);
        
        jtbPlayers.getColumnModel().getColumn(7).addPropertyChangeListener(new PropertyChangeListener() {
            public void propertyChange(PropertyChangeEvent evt) {
                if (evt.getPropertyName().equals("width")) {
                    jtbPlayers.setRowHeight(1);
                    mjtTeamPlayers playersModel = new mjtTeamPlayers(_data._players);
                    jtbPlayers.setDefaultRenderer(String.class, playersModel);
                }
            }
        });

        /**
         * Team goods
         */
        jtbPlayers.setDefaultRenderer(Integer.class, playersModel);
        jtbPlayers.setDefaultRenderer(String.class, playersModel);
        jtbStars.setDefaultRenderer(Integer.class, starsModel);
        jtbStars.setDefaultRenderer(String.class, starsModel);
        
        jlbNbAssists.setText(Integer.toString(_data._assistants));
        jlbCostAssists.setText(Integer.toString(_data._assistants * RosterType._assistant_cost));
        jlbPriceAssist.setText(Integer.toString(RosterType._assistant_cost));
        
        jlbNbReroll.setText(Integer.toString(_data._rerolls));
        jlbCostReroll.setText(Integer.toString(_data._rerolls * (_data._roster!=null?_data._roster._reroll_cost:0)));
        jlbPriceReroll.setText(Integer.toString((_data._roster!=null?_data._roster._reroll_cost:0)));
        
        jlbNbCherrleaders.setText(Integer.toString(_data._cheerleaders));
        jlbCostCheerleaders.setText(Integer.toString(_data._cheerleaders * RosterType._cheerleader_cost));
        jlbPriceCheerleaders.setText(Integer.toString(RosterType._cheerleader_cost));
        
        jlbNbFanFactor.setText(Integer.toString(_data._fanfactor));
        jlbCostFanFactor.setText(Integer.toString(_data._fanfactor * RosterType._fan_factor_cost));
        jlbPriceFanFactor.setText(Integer.toString(RosterType._fan_factor_cost));
        
        if (_data._roster!=null)
        {
        jlbCostApothecary.setEnabled(_data._roster._apothecary);
        jslApothecary.setEnabled(_data._roster._apothecary);
        jlbPriceApothecary.setEnabled(_data._roster._apothecary);
            jlbApothecary.setEnabled(_data._roster._apothecary);
            jlbX10.setEnabled(_data._roster._apothecary);
            jlbX20.setEnabled(_data._roster._apothecary);

            if (!_data._roster._apothecary) {
                jslApothecary.setValue(0);
            } else {
                jlbPriceApothecary.setText(Integer.toString(RosterType._apothecary_cost));
                if (_data._apothecary) {
                    jlbNbApothecary.setText("1");
                    jlbCostApothecary.setText(Integer.toString(RosterType._apothecary_cost));
                } else {
                    jlbNbApothecary.setText("0");
                    jlbCostApothecary.setText("0");
                }
            }
        }

        /**
         * Team inducements
         */
        jlbPriceExtraReroll.setText(Integer.toString(RosterType._extra_reroll_cost));
        jlbNbExtraReroll.setText(Integer.toString(_data._extrarerolls));
        jlbCostExtraReroll.setText(Integer.toString(_data._extrarerolls * RosterType._extra_reroll_cost));
        
        jlbPriceBabes.setText(Integer.toString(RosterType._babe_cost));
        jlbNbBribeTheRef.setText(Integer.toString(_data._bloodweiserbabes));
        jlbCostBabes.setText(Integer.toString(_data._bloodweiserbabes * RosterType._babe_cost));
        
        
        if (_data._wizard) {
            jlbNbWizard.setText("1");
            jlbCostWizard.setText(Integer.toString(RosterType._wizard_cost));
        } else {
            jlbNbWizard.setText("0");
            jlbCostWizard.setText("0");
        }
        jlbPriceWizard.setText(Integer.toString(RosterType._wizard_cost));
        
        jlbNbBribeTheRef.setText(Integer.toString(_data._corruptions));
        if (_data._roster != null) {
            jlbCostBribeTheRef.setText(Integer.toString(_data._corruptions * _data._roster._bribe_cost));
        }
        
        boolean canHaveApo = false;
        if (_data._roster != null) {
            if (_data._roster._apothecary) {
                canHaveApo = true;
            }
        }
        
        jlbCostLocalApothecary.setEnabled(canHaveApo);
        jslLocalApothecary.setEnabled(canHaveApo);
        jlbCostLocalApothecary.setEnabled(canHaveApo);
        jlbPriceLocalApothecary.setEnabled(canHaveApo);
        jlbNbLocalApothecary.setEnabled(canHaveApo);
        jlbX4.setEnabled(canHaveApo);
        
        if (!canHaveApo) {
            _data._localapothecary = 0;
            jlbCostLocalApothecary.setText("0");
            jlbPriceLocalApothecary.setText("100000");
            jlbNbLocalApothecary.setText("0");
            jslLocalApothecary.setValue(0);
        } else {
            jlbNbLocalApothecary.setText(Integer.toString(_data._localapothecary));
            jlbCostLocalApothecary.setText(Integer.toString(_data._localapothecary * RosterType._local_apo_cost));
            jlbPriceLocalApothecary.setText(Integer.toString(RosterType._local_apo_cost));
        }
        
        boolean canIgor = false;
        if (_data._roster != null) {
            if (_data._roster._igor) {
                canIgor = true;
            }
        }
        
        jlbCostIgor.setEnabled(canIgor);
        jslIgor.setEnabled(canIgor);
        jlbCostIgor.setEnabled(canIgor);
        jlbPriceIgor.setEnabled(canIgor);
        jlbNbIgor.setEnabled(canIgor);
        jlbX6.setEnabled(canIgor);
        
        if (!canIgor) {
            _data._igor = false;
            jlbCostIgor.setText("0");
            jlbPriceIgor.setText("100000");
            jlbNbIgor.setText("0");
            jslIgor.setValue(0);
        } else {
            
            jlbNbIgor.setText(Integer.toString(jslIgor.getValue()));
            jlbCostIgor.setText(Integer.toString(jslIgor.getValue() * RosterType._igor_cost));
            jlbPriceIgor.setText(Integer.toString(RosterType._igor_cost));
        }
        
        jlbCostCard.setText(Integer.toString(_data._cards));
//        jlbCardBudget.setText(Integer.toString(_data._cards));
        if (_data._roster != null) {
            jlbCostBribeTheRef.setText(Integer.toString(_data._corruptions * _data._roster._bribe_cost));
        }
        
        jbtAddStar.setEnabled(_data._champions.size() < 2);
        jbtRemoveStar.setEnabled(jtbStars.getSelectedRow() > -1);

        
        /**
         * Ranking
         */
        int cost=_data.getValue(jcbWithSkills.isSelected());
        jlbTotalCost.setText(Integer.toString(cost));
        jlbRanking.setText(Integer.toString(cost/10000));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtAdd;
    private javax.swing.JButton jbtAddSkill;
    private javax.swing.JButton jbtAddStar;
    private javax.swing.JButton jbtOK;
    private javax.swing.JButton jbtRemove;
    private javax.swing.JButton jbtRemoveSkill;
    private javax.swing.JButton jbtRemoveStar;
    private javax.swing.JButton jbtSelectCoach;
    private javax.swing.JCheckBox jcbWithSkills;
    private javax.swing.JLabel jlbApothecary;
    private javax.swing.JLabel jlbBabes;
    private javax.swing.JLabel jlbCoachName;
    private javax.swing.JLabel jlbCostApothecary;
    private javax.swing.JLabel jlbCostAssists;
    private javax.swing.JLabel jlbCostBabes;
    private javax.swing.JLabel jlbCostBribeTheRef;
    private javax.swing.JLabel jlbCostCard;
    private javax.swing.JLabel jlbCostCheerleaders;
    private javax.swing.JLabel jlbCostExtraReroll;
    private javax.swing.JLabel jlbCostFanFactor;
    private javax.swing.JLabel jlbCostIgor;
    private javax.swing.JLabel jlbCostLocalApothecary;
    private javax.swing.JLabel jlbCostReroll;
    private javax.swing.JLabel jlbCostWizard;
    private javax.swing.JButton jlbIcon;
    private javax.swing.JLabel jlbNbApothecary;
    private javax.swing.JLabel jlbNbAssists;
    private javax.swing.JLabel jlbNbAssists1;
    private javax.swing.JLabel jlbNbAssists2;
    private javax.swing.JLabel jlbNbAssists3;
    private javax.swing.JLabel jlbNbAssists4;
    private javax.swing.JLabel jlbNbAssists5;
    private javax.swing.JLabel jlbNbAssists6;
    private javax.swing.JLabel jlbNbAssists8;
    private javax.swing.JLabel jlbNbAssists9;
    private javax.swing.JLabel jlbNbBabes;
    private javax.swing.JLabel jlbNbBribeTheRef;
    private javax.swing.JLabel jlbNbCherrleaders;
    private javax.swing.JLabel jlbNbExtraReroll;
    private javax.swing.JLabel jlbNbFanFactor;
    private javax.swing.JLabel jlbNbIgor;
    private javax.swing.JLabel jlbNbLocalApothecary;
    private javax.swing.JLabel jlbNbReroll;
    private javax.swing.JLabel jlbNbWizard;
    private javax.swing.JLabel jlbPriceApothecary;
    private javax.swing.JLabel jlbPriceAssist;
    private javax.swing.JLabel jlbPriceBabes;
    private javax.swing.JLabel jlbPriceBribeTheRef;
    private javax.swing.JLabel jlbPriceCheerleaders;
    private javax.swing.JLabel jlbPriceExtraReroll;
    private javax.swing.JLabel jlbPriceFanFactor;
    private javax.swing.JLabel jlbPriceIgor;
    private javax.swing.JLabel jlbPriceLocalApothecary;
    private javax.swing.JLabel jlbPriceReroll;
    private javax.swing.JLabel jlbPriceWizard;
    private javax.swing.JLabel jlbRanking;
    private javax.swing.JLabel jlbRosterType;
    private javax.swing.JLabel jlbTeamName;
    private javax.swing.JLabel jlbTotalCost;
    private javax.swing.JLabel jlbX;
    private javax.swing.JLabel jlbX1;
    private javax.swing.JLabel jlbX10;
    private javax.swing.JLabel jlbX11;
    private javax.swing.JLabel jlbX12;
    private javax.swing.JLabel jlbX13;
    private javax.swing.JLabel jlbX2;
    private javax.swing.JLabel jlbX20;
    private javax.swing.JLabel jlbX3;
    private javax.swing.JLabel jlbX4;
    private javax.swing.JLabel jlbX5;
    private javax.swing.JLabel jlbX6;
    private javax.swing.JLabel jlbX7;
    private javax.swing.JLabel jlbX8;
    private javax.swing.JLabel jlbX9;
    private javax.swing.JPanel jpnCenter;
    private javax.swing.JPanel jpnTitle;
    private javax.swing.JSlider jslApothecary;
    private javax.swing.JSlider jslAssists;
    private javax.swing.JSlider jslBabes;
    private javax.swing.JSlider jslBribeTheRef;
    private javax.swing.JSlider jslCardBudget;
    private javax.swing.JSlider jslCheerleaders;
    private javax.swing.JSlider jslExtraReroll;
    private javax.swing.JSlider jslFanFactor;
    private javax.swing.JSlider jslIgor;
    private javax.swing.JSlider jslLocalApothecary;
    private javax.swing.JSlider jslReroll;
    private javax.swing.JSlider jslWizard;
    private javax.swing.JTable jtbPlayers;
    private javax.swing.JTable jtbStars;
    private javax.swing.JTabbedPane jtpGoods;
    // End of variables declaration//GEN-END:variables
}
