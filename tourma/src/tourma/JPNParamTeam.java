/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tourma;

import java.text.ParseException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import tourma.data.Criteria;
import tourma.data.Tournament;
import tourma.utility.StringConstants;

/**
 *
 * @author WFMJ7631
 */
public class JPNParamTeam extends javax.swing.JPanel {

    Tournament mTournament;

    /**
     * Creates new form JPNParamTeam
     */
    public JPNParamTeam() {
        mTournament = Tournament.getTournament();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"})
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jrbTeamVictory = new javax.swing.JRadioButton();
        jrbCoachPoints = new javax.swing.JRadioButton();
        jLabel23 = new javax.swing.JLabel();
        jtffVictoryTeam = new javax.swing.JFormattedTextField();
        jLabel24 = new javax.swing.JLabel();
        jtffDrawTeam = new javax.swing.JFormattedTextField();
        jLabel25 = new javax.swing.JLabel();
        jtffLostTeam = new javax.swing.JFormattedTextField();
        jLabel26 = new javax.swing.JLabel();
        jcbRank1Team = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        jcbRank2Team = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        jcbRank3Team = new javax.swing.JComboBox();
        jLabel29 = new javax.swing.JLabel();
        jcbRank4Team = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        jcbRank5Team = new javax.swing.JComboBox();
        jlbVictoryPoints = new javax.swing.JLabel();
        jtffTeamVictoryBonus = new javax.swing.JFormattedTextField();
        jlbVictoryPoints1 = new javax.swing.JLabel();
        jtffTeamDrawBonus = new javax.swing.JFormattedTextField();

        setLayout(new java.awt.GridLayout(11, 2));

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("tourma/languages/language"); // NOI18N
        jrbTeamVictory.setText(bundle.getString("UseTeamVictory")); // NOI18N
        jrbTeamVictory.setHideActionText(true);
        jrbTeamVictory.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jrbTeamVictory.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jrbTeamVictory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTeamVictoryActionPerformed(evt);
            }
        });
        add(jrbTeamVictory);

        jrbCoachPoints.setText(bundle.getString("UseCoachsPointsSum")); // NOI18N
        jrbCoachPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCoachPointsActionPerformed(evt);
            }
        });
        add(jrbCoachPoints);

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel23.setText(bundle.getString("Victory")); // NOI18N
        jLabel23.setToolTipText(bundle.getString("VictoryNumberOfPointsKey")); // NOI18N
        add(jLabel23);

        jtffVictoryTeam.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffVictoryTeam.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffVictoryTeamFocusLost(evt);
            }
        });
        add(jtffVictoryTeam);

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel24.setText(bundle.getString("Draw")); // NOI18N
        jLabel24.setToolTipText(bundle.getString("DrawMatchTipKey")); // NOI18N
        add(jLabel24);

        jtffDrawTeam.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffDrawTeam.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffDrawTeamFocusLost(evt);
            }
        });
        add(jtffDrawTeam);

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel25.setText(bundle.getString("Loss")); // NOI18N
        jLabel25.setToolTipText(bundle.getString("LossTipKey")); // NOI18N
        add(jLabel25);

        jtffLostTeam.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffLostTeam.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffLostTeamFocusLost(evt);
            }
        });
        add(jtffLostTeam);

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel26.setText(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("RankingCriteria")+java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" 1:"));
        jLabel26.setToolTipText(bundle.getString("")); // NOI18N
        add(jLabel26);

        jcbRank1Team.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun", "Points", "Points adversaires", "Touchdowns", "Sorties", "Aggressions", "Différence de touchdowns", "Différence de sorties", "Différence d'aggression", "Victoire-Nul-Défaite" }));
        jcbRank1Team.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRank1TeamActionPerformed(evt);
            }
        });
        add(jcbRank1Team);

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel27.setText(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("RankingCriteria")+java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" 2:"));
        jLabel27.setToolTipText(bundle.getString("")); // NOI18N
        add(jLabel27);

        jcbRank2Team.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun", "Points", "Points adversaires", "Touchdowns", "Sorties", "Aggressions", "Différence de touchdowns", "Différence de sorties", "Différence d'aggression", "Victoire-Nul-Défaite" }));
        jcbRank2Team.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRank2TeamActionPerformed(evt);
            }
        });
        add(jcbRank2Team);

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel28.setText(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("RankingCriteria")+java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" 3:"));
        jLabel28.setToolTipText(bundle.getString("")); // NOI18N
        add(jLabel28);

        jcbRank3Team.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun", "Points", "Points adversaires", "Touchdowns", "Sorties", "Aggressions", "Différence de touchdowns", "Différence de sorties", "Différence d'aggression", "Victoire-Nul-Défaite" }));
        jcbRank3Team.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRank3TeamActionPerformed(evt);
            }
        });
        add(jcbRank3Team);

        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel29.setText(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("RankingCriteria")+java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" 4:"));
        jLabel29.setToolTipText(bundle.getString("")); // NOI18N
        add(jLabel29);

        jcbRank4Team.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun", "Points", "Points adversaires", "Touchdowns", "Sorties", "Aggressions", "Différence de touchdowns", "Différence de sorties", "Différence d'aggression", "Victoire-Nul-Défaite" }));
        jcbRank4Team.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRank4TeamActionPerformed(evt);
            }
        });
        add(jcbRank4Team);

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel30.setText(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("RankingCriteria")+java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" 5:"));
        jLabel30.setToolTipText(bundle.getString("")); // NOI18N
        add(jLabel30);

        jcbRank5Team.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun", "Points", "Points adversaires", "Touchdowns", "Sorties", "Aggressions", "Différence de touchdowns", "Différence de sorties", "Différence d'aggression", "Victoire-Nul-Défaite" }));
        jcbRank5Team.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRank5TeamActionPerformed(evt);
            }
        });
        add(jcbRank5Team);

        jlbVictoryPoints.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jlbVictoryPoints.setText(bundle.getString("TeamVictoryBonus")); // NOI18N
        jlbVictoryPoints.setToolTipText(bundle.getString("")); // NOI18N
        add(jlbVictoryPoints);

        jtffTeamVictoryBonus.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffTeamVictoryBonus.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffTeamVictoryBonusFocusLost(evt);
            }
        });
        add(jtffTeamVictoryBonus);

        jlbVictoryPoints1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jlbVictoryPoints1.setText(bundle.getString("TeamDrawBonus")); // NOI18N
        jlbVictoryPoints1.setToolTipText(bundle.getString("")); // NOI18N
        add(jlbVictoryPoints1);

        jtffTeamDrawBonus.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffTeamDrawBonus.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffTeamDrawBonusFocusLost(evt);
            }
        });
        add(jtffTeamDrawBonus);
    }// </editor-fold>//GEN-END:initComponents
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jrbTeamVictoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTeamVictoryActionPerformed
    mTournament.getParams().mTeamVictoryOnly = jrbTeamVictory.isSelected();
    update();
    }//GEN-LAST:event_jrbTeamVictoryActionPerformed
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jrbCoachPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCoachPointsActionPerformed
    mTournament.getParams().mTeamVictoryOnly = !jrbCoachPoints.isSelected();
    update();
    }//GEN-LAST:event_jrbCoachPointsActionPerformed
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jtffVictoryTeamFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffVictoryTeamFocusLost
    try {
        jtffVictoryTeam.commitEdit();
        final int points = ((Long) jtffVictoryTeam.getValue()).intValue();
        mTournament.getParams().mPointsTeamVictory = points;
    } catch (ParseException e) {
        jtffVictoryTeam.setValue(jtffVictoryTeam.getValue());
    }
    update();
    }//GEN-LAST:event_jtffVictoryTeamFocusLost
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jtffDrawTeamFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffDrawTeamFocusLost
    try {
        jtffDrawTeam.commitEdit();
        final int points = ((Long) jtffDrawTeam.getValue()).intValue();
        mTournament.getParams().mPointsTeamDraw = points;
    } catch (ParseException e) {
        jtffDrawTeam.setValue(jtffDrawTeam.getValue());
    }
    update();
    }//GEN-LAST:event_jtffDrawTeamFocusLost
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jtffLostTeamFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffLostTeamFocusLost
    try {
        jtffLostTeam.commitEdit();
        final int points = ((Long) jtffLostTeam.getValue()).intValue();
        mTournament.getParams().mPointsTeamLost = points;
    } catch (ParseException e) {
        jtffLostTeam.setValue(jtffLostTeam.getValue());
    }
    update();
    }//GEN-LAST:event_jtffLostTeamFocusLost
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jcbRank1TeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRank1TeamActionPerformed
    mTournament.getParams().mRankingTeam1 = jcbRank1Team.getSelectedIndex();
    update();
    }//GEN-LAST:event_jcbRank1TeamActionPerformed
@SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jcbRank2TeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRank2TeamActionPerformed
        mTournament.getParams().mRankingTeam2 = jcbRank2Team.getSelectedIndex();
        update();
    }//GEN-LAST:event_jcbRank2TeamActionPerformed
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jcbRank3TeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRank3TeamActionPerformed
    mTournament.getParams().mRankingTeam3 = jcbRank3Team.getSelectedIndex();
    update();
    }//GEN-LAST:event_jcbRank3TeamActionPerformed
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jcbRank4TeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRank4TeamActionPerformed
    mTournament.getParams().mRankingTeam4 = jcbRank4Team.getSelectedIndex();
    update();
    }//GEN-LAST:event_jcbRank4TeamActionPerformed
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jcbRank5TeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRank5TeamActionPerformed
    mTournament.getParams().mRankingTeam5 = jcbRank5Team.getSelectedIndex();
    update();
    }//GEN-LAST:event_jcbRank5TeamActionPerformed
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jtffTeamVictoryBonusFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffTeamVictoryBonusFocusLost
    try {
        jtffTeamVictoryBonus.commitEdit();
        final int points = ((Long) jtffTeamVictoryBonus.getValue()).intValue();
        mTournament.getParams().mPointsTeamVictoryBonus = points;
    } catch (ParseException e) {
        jtffTeamVictoryBonus.setValue(jtffTeamVictoryBonus.getValue());
    }
    update();
    }//GEN-LAST:event_jtffTeamVictoryBonusFocusLost
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jtffTeamDrawBonusFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffTeamDrawBonusFocusLost
    try {
        jtffTeamDrawBonus.commitEdit();
        final int points = ((Long) jtffTeamDrawBonus.getValue()).intValue();
        mTournament.getParams().mPointsTeamDrawBonus = points;
    } catch (ParseException e) {
        jtffTeamDrawBonus.setValue(jtffTeamDrawBonus.getValue());
    }
    update();
    }//GEN-LAST:event_jtffTeamDrawBonusFocusLost

    public void update() {

        final boolean teamMatches = mTournament.getParams().mTeamTournament && (mTournament.getParams().mTeamPairing == 1);

        jtffDrawTeam.setValue(mTournament.getParams().mPointsTeamDraw);
        jtffLostTeam.setValue(mTournament.getParams().mPointsTeamLost);

        jtffVictoryTeam.setValue(mTournament.getParams().mPointsTeamVictory);

        jrbCoachPoints.setEnabled(teamMatches);
        jrbTeamVictory.setEnabled(teamMatches);

        jtffTeamVictoryBonus.setEnabled(teamMatches && (!mTournament.getParams().mTeamVictoryOnly));

        jtffTeamDrawBonus.setEnabled(teamMatches && (!mTournament.getParams().mTeamVictoryOnly));
        jlbVictoryPoints.setEnabled(teamMatches && (!mTournament.getParams().mTeamVictoryOnly));
        jlbVictoryPoints1.setEnabled(teamMatches && (!mTournament.getParams().mTeamVictoryOnly));

        jtffDrawTeam.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));
        jtffLostTeam.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));

        jtffVictoryTeam.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));
        jtffDrawTeam.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));


        jLabel23.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));
        jLabel24.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));
        jLabel25.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));
        jLabel26.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));
        jLabel27.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));
        jLabel28.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));
        jLabel29.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));
        jLabel30.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));

        jrbCoachPoints.setSelected(!mTournament.getParams().mTeamVictoryOnly);
        jrbTeamVictory.setSelected(mTournament.getParams().mTeamVictoryOnly);
        jtffTeamVictoryBonus.setValue(mTournament.getParams().mPointsTeamVictoryBonus);
        jtffTeamDrawBonus.setValue(mTournament.getParams().mPointsTeamDrawBonus);

        final ArrayList<String> rankChoices = new ArrayList<String>();
        rankChoices.add(StringConstants.CS_NONE);
        rankChoices.add(StringConstants.CS_POINTS);
        rankChoices.add(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("POINTS ADVERSAIRES"));
        rankChoices.add(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("V/N/D"));
        for (int i = 0; i < Tournament.getTournament().getParams().mCriterias.size(); i++) {
            final Criteria criteria = Tournament.getTournament().getParams().mCriterias.get(i);
            rankChoices.add(criteria.mName + java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" JOUEUR"));
            rankChoices.add(criteria.mName + java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" ADVERSAIRE"));
            rankChoices.add(criteria.mName + java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" DIFFÉRENCE"));
        }


        jcbRank1Team.setModel(new DefaultComboBoxModel(rankChoices.toArray()));
        jcbRank2Team.setModel(new DefaultComboBoxModel(rankChoices.toArray()));
        jcbRank3Team.setModel(new DefaultComboBoxModel(rankChoices.toArray()));
        jcbRank4Team.setModel(new DefaultComboBoxModel(rankChoices.toArray()));
        jcbRank5Team.setModel(new DefaultComboBoxModel(rankChoices.toArray()));

        jcbRank1Team.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));
        jcbRank2Team.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));
        jcbRank3Team.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));
        jcbRank4Team.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));
        jcbRank5Team.setEnabled(teamMatches && (mTournament.getParams().mTeamVictoryOnly));

        jcbRank1Team.removeActionListener(jcbRank1Team.getActionListeners()[0]);
        jcbRank2Team.removeActionListener(jcbRank2Team.getActionListeners()[0]);
        jcbRank3Team.removeActionListener(jcbRank3Team.getActionListeners()[0]);
        jcbRank4Team.removeActionListener(jcbRank4Team.getActionListeners()[0]);
        jcbRank5Team.removeActionListener(jcbRank5Team.getActionListeners()[0]);

        jcbRank1Team.setSelectedIndex(mTournament.getParams().mRankingTeam1);
        jcbRank2Team.setSelectedIndex(mTournament.getParams().mRankingTeam2);
        jcbRank3Team.setSelectedIndex(mTournament.getParams().mRankingTeam3);
        jcbRank4Team.setSelectedIndex(mTournament.getParams().mRankingTeam4);
        jcbRank5Team.setSelectedIndex(mTournament.getParams().mRankingTeam5);

        jcbRank1Team.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                jcbRank1TeamActionPerformed(evt);
            }
        });

        jcbRank2Team.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                jcbRank2TeamActionPerformed(evt);
            }
        });

        jcbRank3Team.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                jcbRank3TeamActionPerformed(evt);
            }
        });

        jcbRank4Team.addActionListener(
                new java.awt.event.ActionListener() {
                    public void actionPerformed(final java.awt.event.ActionEvent evt) {
                        jcbRank4TeamActionPerformed(evt);
                    }
                });

        jcbRank5Team.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                jcbRank5TeamActionPerformed(evt);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JComboBox jcbRank1Team;
    private javax.swing.JComboBox jcbRank2Team;
    private javax.swing.JComboBox jcbRank3Team;
    private javax.swing.JComboBox jcbRank4Team;
    private javax.swing.JComboBox jcbRank5Team;
    private javax.swing.JLabel jlbVictoryPoints;
    private javax.swing.JLabel jlbVictoryPoints1;
    private javax.swing.JRadioButton jrbCoachPoints;
    private javax.swing.JRadioButton jrbTeamVictory;
    private javax.swing.JFormattedTextField jtffDrawTeam;
    private javax.swing.JFormattedTextField jtffLostTeam;
    private javax.swing.JFormattedTextField jtffTeamDrawBonus;
    private javax.swing.JFormattedTextField jtffTeamVictoryBonus;
    private javax.swing.JFormattedTextField jtffVictoryTeam;
    // End of variables declaration//GEN-END:variables
}
