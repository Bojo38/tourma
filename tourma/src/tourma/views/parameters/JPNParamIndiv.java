/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tourma.views.parameters;

import java.text.ParseException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import tourma.data.Criteria;
import tourma.data.Tournament;
import tourma.utility.StringConstants;

/**
 *
 * @author WFMJ7631
 */
public class JPNParamIndiv extends javax.swing.JPanel {

    Tournament mTournament;

    /**
     * Creates new form JPNParamIndiv
     */
    public JPNParamIndiv() {
        mTournament = Tournament.getTournament();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked","PMD"})
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jtffLargeVictory = new javax.swing.JFormattedTextField();
        jLabel19 = new javax.swing.JLabel();
        jtffLargeVictoryGap = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jtffVictory = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jtffDraw = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jtffLittleLost = new javax.swing.JFormattedTextField();
        jLabel20 = new javax.swing.JLabel();
        jtffLittleLostGap = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jtffLost = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        jcbRank1 = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jcbRank2 = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jcbRank3 = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jcbRank4 = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        jcbRank5 = new javax.swing.JComboBox();

        setLayout(new java.awt.GridLayout(12, 2));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("tourma/languages/language"); // NOI18N
        jLabel3.setText(bundle.getString("LargeVictoryKey")); // NOI18N
        jLabel3.setToolTipText(bundle.getString("LargeVictoryTipKey")); // NOI18N
        add(jLabel3);

        jtffLargeVictory.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffLargeVictory.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffLargeVictoryFocusLost(evt);
            }
        });
        add(jtffLargeVictory);

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel19.setText(bundle.getString("MinimumGapForLargeVictoryKey")); // NOI18N
        jLabel19.setToolTipText(bundle.getString("GapForLargeVictoryTipKey")); // NOI18N
        add(jLabel19);

        jtffLargeVictoryGap.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffLargeVictoryGap.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffLargeVictoryGapFocusLost(evt);
            }
        });
        add(jtffLargeVictoryGap);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText(bundle.getString("VictoryKey")); // NOI18N
        jLabel4.setToolTipText(bundle.getString("VictoryNumberOfPointsKey")); // NOI18N
        add(jLabel4);

        jtffVictory.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffVictory.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffVictoryFocusLost(evt);
            }
        });
        add(jtffVictory);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText(bundle.getString("DrawKey")); // NOI18N
        jLabel5.setToolTipText(bundle.getString("DrawMatchTipKey")); // NOI18N
        add(jLabel5);

        jtffDraw.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffDraw.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffDrawFocusLost(evt);
            }
        });
        add(jtffDraw);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText(bundle.getString("ShortLossKey")); // NOI18N
        jLabel6.setToolTipText(bundle.getString("ShortLossTipKey")); // NOI18N
        add(jLabel6);

        jtffLittleLost.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffLittleLost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffLittleLostFocusLost(evt);
            }
        });
        add(jtffLittleLost);

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel20.setText(bundle.getString("MaximumGapForShortLossKey")); // NOI18N
        jLabel20.setToolTipText(bundle.getString("MaximumGapForShortLossTipKey")); // NOI18N
        add(jLabel20);

        jtffLittleLostGap.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffLittleLostGap.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffLittleLostGapFocusLost(evt);
            }
        });
        add(jtffLittleLostGap);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText(bundle.getString("LossKey")); // NOI18N
        jLabel7.setToolTipText(bundle.getString("LossTipKey")); // NOI18N
        add(jLabel7);

        jtffLost.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffLost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffLostFocusLost(evt);
            }
        });
        add(jtffLost);

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel14.setText(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("RankingCriteria")+java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" 1:"));
        add(jLabel14);

        jcbRank1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun", "Points", "Points adversaires", "Touchdowns", "Sorties", "Aggressions", "Différence de touchdowns", "Différence de sorties", "Différence d'aggression", "Victoire-Nul-Défaite", "Passes", "Interceptions", "Différence de passes", "Différence d'interceptions" }));
        jcbRank1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRank1ActionPerformed(evt);
            }
        });
        add(jcbRank1);

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel15.setText(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("RankingCriteria")+java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" 2:"));
        add(jLabel15);

        jcbRank2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun", "Points", "Points adversaires", "Touchdowns", "Sorties", "Aggressions", "Différence de touchdowns", "Différence de sorties", "Différence d'aggression", "Victoire-Nul-Défaite", "Passes", "Interceptions", "Différence de passes", "Différence d'interceptions" }));
        jcbRank2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRank2ActionPerformed(evt);
            }
        });
        add(jcbRank2);

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel16.setText(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("RankingCriteria")+java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" 3:"));
        add(jLabel16);

        jcbRank3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun", "Points", "Points adversaires", "Touchdowns", "Sorties", "Aggressions", "Différence de touchdowns", "Différence de sorties", "Différence d'aggression", "Victoire-Nul-Défaite", "Passes", "Interceptions", "Différence de passes", "Différence d'interceptions" }));
        jcbRank3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRank3ActionPerformed(evt);
            }
        });
        add(jcbRank3);

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel17.setText(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("RankingCriteria")+java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" 4:"));
        add(jLabel17);

        jcbRank4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun", "Points", "Points adversaires", "Touchdowns", "Sorties", "Aggressions", "Différence de touchdowns", "Différence de sorties", "Différence d'aggression", "Victoire-Nul-Défaite", "Passes", "Interceptions", "Différence de passes", "Différence d'interceptions" }));
        jcbRank4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRank4ActionPerformed(evt);
            }
        });
        add(jcbRank4);

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel18.setText(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("RankingCriteria")+java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" 5:"));
        add(jLabel18);

        jcbRank5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun", "Points", "Points adversaires", "Touchdowns", "Sorties", "Aggressions", "Différence de touchdowns", "Différence de sorties", "Différence d'aggression", "Victoire-Nul-Défaite", "Passes", "Interceptions", "Différence de passes", "Différence d'interceptions" }));
        jcbRank5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRank5ActionPerformed(evt);
            }
        });
        add(jcbRank5);
    }// </editor-fold>//GEN-END:initComponents
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jtffLargeVictoryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffLargeVictoryFocusLost

    try {
        jtffLargeVictory.commitEdit();
        final int points = ((Long) jtffLargeVictory.getValue()).intValue();
        mTournament.getParams().mPointsIndivLargeVictory = points;
    } catch (ParseException e) {
        jtffLargeVictory.setValue(jtffLargeVictory.getValue());
    }
    update();
    }//GEN-LAST:event_jtffLargeVictoryFocusLost
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jtffLargeVictoryGapFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffLargeVictoryGapFocusLost
    try {
        jtffLargeVictoryGap.commitEdit();
        final int points = ((Long) jtffLargeVictoryGap.getValue()).intValue();
        mTournament.getParams().mGapLargeVictory = points;
    } catch (ParseException e) {
        jtffLargeVictoryGap.setValue(jtffLargeVictoryGap.getValue());
    }

    update();
    }//GEN-LAST:event_jtffLargeVictoryGapFocusLost
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jtffVictoryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffVictoryFocusLost
    try {
        jtffVictory.commitEdit();
        final int points = ((Long) jtffVictory.getValue()).intValue();
        mTournament.getParams().mPointsIndivVictory = points;
    } catch (ParseException e) {
        jtffVictory.setValue(jtffVictory.getValue());
    }
    update();
    }//GEN-LAST:event_jtffVictoryFocusLost
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jtffDrawFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffDrawFocusLost
    try {
        jtffDraw.commitEdit();
        final int points = ((Long) jtffDraw.getValue()).intValue();
        mTournament.getParams().mPointsIndivDraw = points;
    } catch (ParseException e) {
        jtffDraw.setValue(jtffDraw.getValue());
    }
    update();
    }//GEN-LAST:event_jtffDrawFocusLost
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jtffLittleLostFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffLittleLostFocusLost
    try {
        jtffLittleLost.commitEdit();
        final int points = ((Long) jtffLittleLost.getValue()).intValue();
        mTournament.getParams().mPointsIndivLittleLost = points;
    } catch (ParseException e) {
        jtffLittleLost.setValue(jtffLittleLost.getValue());
    }
    update();
    }//GEN-LAST:event_jtffLittleLostFocusLost
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jtffLittleLostGapFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffLittleLostGapFocusLost
    try {
        jtffLittleLostGap.commitEdit();
        final int points = ((Long) jtffLittleLostGap.getValue()).intValue();
        mTournament.getParams().mGapLittleLost = points;
    } catch (ParseException e) {
        jtffLittleLostGap.setValue(jtffLittleLostGap.getValue());
    }

    update();
    }//GEN-LAST:event_jtffLittleLostGapFocusLost
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jtffLostFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffLostFocusLost
    try {
        jtffLost.commitEdit();
        final int points = ((Long) jtffLost.getValue()).intValue();
        mTournament.getParams().mPointsIndivLost = points;
    } catch (ParseException e) {
        jtffLost.setValue(jtffLost.getValue());
    }
    update();
    }//GEN-LAST:event_jtffLostFocusLost
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jcbRank1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRank1ActionPerformed
    mTournament.getParams().mRankingIndiv1 = jcbRank1.getSelectedIndex();
    update();
    }//GEN-LAST:event_jcbRank1ActionPerformed
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jcbRank2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRank2ActionPerformed
    mTournament.getParams().mRankingIndiv2 = jcbRank2.getSelectedIndex();
    update();
    }//GEN-LAST:event_jcbRank2ActionPerformed
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jcbRank3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRank3ActionPerformed
    mTournament.getParams().mRankingIndiv3 = jcbRank3.getSelectedIndex();
    update();
    }//GEN-LAST:event_jcbRank3ActionPerformed
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jcbRank4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRank4ActionPerformed
    mTournament.getParams().mRankingIndiv4 = jcbRank4.getSelectedIndex();
    update();
    }//GEN-LAST:event_jcbRank4ActionPerformed
    @SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jcbRank5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRank5ActionPerformed
    mTournament.getParams().mRankingIndiv5 = jcbRank5.getSelectedIndex();
    update();
    }//GEN-LAST:event_jcbRank5ActionPerformed
    public void update() {

        jtffDraw.setValue(mTournament.getParams().mPointsIndivDraw);
        jtffLargeVictory.setValue(mTournament.getParams().mPointsIndivLargeVictory);
        jtffLittleLost.setValue(mTournament.getParams().mPointsIndivLittleLost);
        jtffLargeVictoryGap.setValue(mTournament.getParams().mGapLargeVictory);
        jtffLittleLostGap.setValue(mTournament.getParams().mGapLittleLost);
        jtffLost.setValue(mTournament.getParams().mPointsIndivLost);

        jtffVictory.setValue(mTournament.getParams().mPointsIndivVictory);

        final ArrayList<String> rankChoices = new ArrayList<>();
        rankChoices.add(StringConstants.CS_NONE);
        rankChoices.add(StringConstants.CS_POINTS);
        rankChoices.add(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("POINTS ADVERSAIRES"));
        rankChoices.add(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("V/N/D"));
        for (int i = 0; i < Tournament.getTournament().getParams().mCriterias.size(); i++) {
            final Criteria criteria = Tournament.getTournament().getParams().mCriterias.get(i);
            rankChoices.add(criteria.mName + java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" JOUEUR"));
            rankChoices.add(criteria.mName + java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" ADVERSAIRE"));
            rankChoices.add(criteria.mName + java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" DIFFÉRENCE"));
        }

        jcbRank1.setModel(new DefaultComboBoxModel(rankChoices.toArray()));
        jcbRank2.setModel(new DefaultComboBoxModel(rankChoices.toArray()));
        jcbRank3.setModel(new DefaultComboBoxModel(rankChoices.toArray()));
        jcbRank4.setModel(new DefaultComboBoxModel(rankChoices.toArray()));
        jcbRank5.setModel(new DefaultComboBoxModel(rankChoices.toArray()));

        jcbRank1.removeActionListener(jcbRank1.getActionListeners()[0]);
        jcbRank2.removeActionListener(jcbRank2.getActionListeners()[0]);
        jcbRank3.removeActionListener(jcbRank3.getActionListeners()[0]);
        jcbRank4.removeActionListener(jcbRank4.getActionListeners()[0]);
        jcbRank5.removeActionListener(jcbRank5.getActionListeners()[0]);

        jcbRank1.setSelectedIndex(mTournament.getParams().mRankingIndiv1);
        jcbRank2.setSelectedIndex(mTournament.getParams().mRankingIndiv2);
        jcbRank3.setSelectedIndex(mTournament.getParams().mRankingIndiv3);
        jcbRank4.setSelectedIndex(mTournament.getParams().mRankingIndiv4);
        jcbRank5.setSelectedIndex(mTournament.getParams().mRankingIndiv5);



        jcbRank1.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                jcbRank1ActionPerformed(evt);
            }
        });

        jcbRank2.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                jcbRank2ActionPerformed(evt);
            }
        });

        jcbRank3.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                jcbRank3ActionPerformed(evt);
            }
        });

        jcbRank4.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                jcbRank4ActionPerformed(evt);
            }
        });

        jcbRank5.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(final java.awt.event.ActionEvent evt) {
                jcbRank5ActionPerformed(evt);
            }
        });

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox jcbRank1;
    private javax.swing.JComboBox jcbRank2;
    private javax.swing.JComboBox jcbRank3;
    private javax.swing.JComboBox jcbRank4;
    private javax.swing.JComboBox jcbRank5;
    private javax.swing.JFormattedTextField jtffDraw;
    private javax.swing.JFormattedTextField jtffLargeVictory;
    private javax.swing.JFormattedTextField jtffLargeVictoryGap;
    private javax.swing.JFormattedTextField jtffLittleLost;
    private javax.swing.JFormattedTextField jtffLittleLostGap;
    private javax.swing.JFormattedTextField jtffLost;
    private javax.swing.JFormattedTextField jtffVictory;
    // End of variables declaration//GEN-END:variables
}
