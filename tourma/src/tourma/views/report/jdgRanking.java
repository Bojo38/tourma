/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jdgRoundReport.java
 *
 * Created on 28 juin 2010, 10:52:47
 */
package tourma.views.report;

import tourma.tableModel.mjtAnnexRankIndiv;
import tourma.tableModel.mjtRankingIndiv;
import tourma.*;
import tourma.data.Round;
import tourma.data.Tournament;
import freemarker.template.Configuration;
import freemarker.template.DefaultObjectWrapper;
import freemarker.template.Template;
import freemarker.template.TemplateException;

import java.awt.Dimension;
import java.awt.print.PrinterException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
import java.net.URI;
import java.net.URISyntaxException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import tourma.tableModel.mjtAnnexRankTeam;
import tourma.tableModel.mjtRankingTeam;

/**
 *
 * @author Frederic Berger
 */
public class jdgRanking extends javax.swing.JDialog {

    public static final int RANKING_GENERAL = 0;
    public static final int RANKING_SCORER = 1;
    public static final int RANKING_DESTROYER = 2;
    public static final int RANKING_FOULER = 3;
    public static final int RANKING_SCORED = 4;
    public static final int RANKING_DESTROYED = 5;
    public static final int RANKING_FOULED = 6;
    public static final int RANKING_PASSER = 7;
    public static final int RANKING_PASSED = 8;
    public static final int RANKING_INTERCEPTER = 9;
    public static final int RANKING_INTERCEPTED = 10;
    Round _round;
    int _roundNumber;
    Tournament _tour;
    boolean _result;
    int _rankType;
    boolean _team = false;
    File filename = null;

    /** Creates new form jdgRoundReport */
    public jdgRanking(java.awt.Frame parent, boolean modal, Round round, int roundNumber, Tournament tour, int RankType, boolean team) {
        super(parent, modal);
        initComponents();

        _round = round;
        _roundNumber = roundNumber;
        _tour = tour;
        _rankType = RankType;
        _team = team;
        this.setTitle(tour.getParams()._tournament_name + java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" - RONDE ") + roundNumber);
        try {
            jepHTML.setContentType(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("HTML"));
            filename = CreateReport();
            jepHTML.setPage(filename.toURI().toURL());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(parent, e.getLocalizedMessage());
        }
        this.setPreferredSize(new Dimension(800, 600));
        pack();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbtOK = new javax.swing.JButton();
        jbtPrint = new javax.swing.JButton();
        jbtExport = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jepHTML = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Ranking"); // NOI18N

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("tourma/languages/language"); // NOI18N
        jbtOK.setText(bundle.getString("OK")); // NOI18N
        jbtOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtOKActionPerformed(evt);
            }
        });
        jPanel1.add(jbtOK);

        jbtPrint.setText(bundle.getString("IMPRIMER")); // NOI18N
        jbtPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPrintActionPerformed(evt);
            }
        });
        jPanel1.add(jbtPrint);

        jbtExport.setText(bundle.getString("EXPORT HTML")); // NOI18N
        jbtExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExportActionPerformed(evt);
            }
        });
        jPanel1.add(jbtExport);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jScrollPane1.setViewportView(jepHTML);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtOKActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jbtOKActionPerformed

    private void jbtPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPrintActionPerformed
        try {
            jepHTML.print();

        } catch (PrinterException e) {
            JOptionPane.showMessageDialog(MainFrame.getMainFrame(), e.getLocalizedMessage());
        }
    }//GEN-LAST:event_jbtPrintActionPerformed

    private void jbtExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExportActionPerformed
        JFileChooser jfc = new JFileChooser();
        if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            File export = jfc.getSelectedFile();

            try
            {
                FileReader in = new FileReader(filename);
                FileWriter out = new FileWriter(export);
                int c;

                while ((c = in.read()) != -1) {
                    out.write(c);
                }

                in.close();
                out.close();
            }
            catch (FileNotFoundException fnf)
            {
                JOptionPane.showMessageDialog(this, fnf.getLocalizedMessage());
            }
             catch (IOException ioe)
            {
                JOptionPane.showMessageDialog(this, ioe.getLocalizedMessage());
            }
        }

    }//GEN-LAST:event_jbtExportActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtExport;
    private javax.swing.JButton jbtOK;
    private javax.swing.JButton jbtPrint;
    private javax.swing.JEditorPane jepHTML;
    // End of variables declaration//GEN-END:variables

    private File CreateReport() {
        File address = null;

        try {
            Configuration cfg = new Configuration();
            URI uri = getClass().getResource("rank.html").toURI();
            if (uri.toString().contains(".jar!")) {
                /*String tmp = uri.toString();
                tmp = tmp.substring(10, tmp.indexOf(".jar!") - 4);
                //tmp=tmp+"";
                cfg.setDirectoryForTemplateLoading(new File(tmp));*/
                cfg.setClassForTemplateLoading(getClass(), "");
            } else {
                cfg.setDirectoryForTemplateLoading(new File(uri));
            }
            cfg.setObjectWrapper(new DefaultObjectWrapper());
            Template temp = cfg.getTemplate(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("RANK.HTML"));

            TableModel model;
            Vector<Round> rounds = new Vector();
            for (int i = 0; i < _tour.getRounds().size() && i < _roundNumber; i++) {
                rounds.add(_tour.getRounds().get(i));
            }

            Map root = new HashMap();
            root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("NOM"), _tour.getParams()._tournament_name + java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" - RONDE ") + _roundNumber);
            if (_team) {
                switch (_rankType) {
                    case RANKING_GENERAL:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("CLASSEMENT GÉNÉRAL"));
                        if (_tour.getParams()._team_victory_only) {
                            model = new mjtRankingTeam(rounds, _tour.getParams()._ranking1_team, _tour.getParams()._ranking2_team, _tour.getParams()._ranking3_team, _tour.getParams()._ranking4_team, _tour.getParams()._ranking5_team, _tour.getTeams());
                        } else {
                            model = new mjtRankingTeam(rounds, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5, _tour.getTeams());
                        }
                        break;
                    case RANKING_SCORER:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("MEILLEURS MARQUEURS"));
                        model = new mjtAnnexRankTeam(rounds, mjtAnnexRankIndiv.C_MOST_TD_POS, _tour.getTeams(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5);
                        break;
                    case RANKING_DESTROYER:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("MEILLEURS DESTRUCTEURS"));
                        model = new mjtAnnexRankTeam(rounds, mjtAnnexRankIndiv.C_MOST_SOR_POS, _tour.getTeams(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5);
                        break;
                    case RANKING_FOULER:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("MEILLEURS CRAMPONS"));
                        model = new mjtAnnexRankTeam(rounds, mjtAnnexRankIndiv.C_MOST_FOUL_POS, _tour.getTeams(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5);
                        break;
                    case RANKING_SCORED:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("PIRES PASSOIRES"));
                        model = new mjtAnnexRankTeam(rounds, mjtAnnexRankIndiv.C_MOST_TD_NEG, _tour.getTeams(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5);
                        break;
                    case RANKING_DESTROYED:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("PIRES PUNCHING BALLS"));
                        model = new mjtAnnexRankTeam(rounds, mjtAnnexRankIndiv.C_MOST_SOR_NEG, _tour.getTeams(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5);
                        break;
                    case RANKING_FOULED:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("PIRES PAILLASSONS"));
                        model = new mjtAnnexRankTeam(rounds, mjtAnnexRankIndiv.C_MOST_FOUL_NEG, _tour.getTeams(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5);
                        break;
                    case RANKING_PASSER:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("MEILLEURS PASSEURS"));
                        model = new mjtAnnexRankTeam(rounds, mjtAnnexRankIndiv.C_MOST_PAS_POS, _tour.getTeams(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5);
                        break;
                    case RANKING_PASSED:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("PASSES SUBIES"));
                        model = new mjtAnnexRankTeam(rounds, mjtAnnexRankIndiv.C_MOST_PAS_NEG, _tour.getTeams(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5);
                        break;
                    case RANKING_INTERCEPTED:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("LES DALTONIENS"));
                        model = new mjtAnnexRankTeam(rounds, mjtAnnexRankIndiv.C_MOST_INT_NEG, _tour.getTeams(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5);
                        break;
                    case RANKING_INTERCEPTER:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("MEILLEURS INTERCEPTEURS"));
                        model = new mjtAnnexRankTeam(rounds, mjtAnnexRankIndiv.C_MOST_INT_POS, _tour.getTeams(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5);
                        break;
                    default:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("CLASSEMENT GÉNÉRAL"));
                        if (_tour.getParams()._team_victory_only) {
                            model = new mjtRankingTeam(rounds, _tour.getParams()._ranking1_team, _tour.getParams()._ranking2_team, _tour.getParams()._ranking3_team, _tour.getParams()._ranking4_team, _tour.getParams()._ranking5_team, _tour.getTeams());
                        } else {
                            model = new mjtRankingTeam(rounds, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5, _tour.getTeams());
                        }
                }
            } else {
                switch (_rankType) {
                    case RANKING_GENERAL:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("CLASSEMENT GÉNÉRAL"));
                        model = new mjtRankingIndiv(rounds, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5, _tour.getCoachs(), _tour.getParams()._teamTournament);
                        break;
                    case RANKING_SCORER:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("MEILLEUR MARQUEUR"));
                        model = new mjtAnnexRankIndiv(rounds, mjtAnnexRankIndiv.C_MOST_TD_POS, _tour.getCoachs(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5, _tour.getParams()._teamTournament);
                        break;
                    case RANKING_DESTROYER:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("MEILLEUR DESTRUCTEUR"));
                        model = new mjtAnnexRankIndiv(rounds, mjtAnnexRankIndiv.C_MOST_SOR_POS, _tour.getCoachs(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5, _tour.getParams()._teamTournament);
                        break;
                    case RANKING_FOULER:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("MEILLEUR CRAMPON"));
                        model = new mjtAnnexRankIndiv(rounds, mjtAnnexRankIndiv.C_MOST_FOUL_POS, _tour.getCoachs(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5, _tour.getParams()._teamTournament);
                        break;
                    case RANKING_SCORED:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("PIRE PASSOIRE"));
                        model = new mjtAnnexRankIndiv(rounds, mjtAnnexRankIndiv.C_MOST_TD_NEG, _tour.getCoachs(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5, _tour.getParams()._teamTournament);
                        break;
                    case RANKING_DESTROYED:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("PIRE PUNCHING BALL"));
                        model = new mjtAnnexRankIndiv(rounds, mjtAnnexRankIndiv.C_MOST_SOR_NEG, _tour.getCoachs(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5, _tour.getParams()._teamTournament);
                        break;
                    case RANKING_FOULED:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("PIRE PAILLASSON"));
                        model = new mjtAnnexRankIndiv(rounds, mjtAnnexRankIndiv.C_MOST_FOUL_NEG, _tour.getCoachs(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5, _tour.getParams()._teamTournament);
                        break;
                    case RANKING_PASSED:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("PASSES SUBIES"));
                        model = new mjtAnnexRankIndiv(rounds, mjtAnnexRankIndiv.C_MOST_PAS_NEG, _tour.getCoachs(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5, _tour.getParams()._teamTournament);
                        break;
                    case RANKING_PASSER:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("MAIN DE DIEU"));
                        model = new mjtAnnexRankIndiv(rounds, mjtAnnexRankIndiv.C_MOST_PAS_POS, _tour.getCoachs(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5, _tour.getParams()._teamTournament);
                        break;
                    case RANKING_INTERCEPTED:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("DALTONIEN"));
                        model = new mjtAnnexRankIndiv(rounds, mjtAnnexRankIndiv.C_MOST_INT_NEG, _tour.getCoachs(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5, _tour.getParams()._teamTournament);
                        break;
                    case RANKING_INTERCEPTER:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("MEILLEUR INTERCEPTEUR"));
                        model = new mjtAnnexRankIndiv(rounds, mjtAnnexRankIndiv.C_MOST_INT_POS, _tour.getCoachs(), true, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5, _tour.getParams()._teamTournament);
                        break;
                    default:
                        root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLE"), java.util.ResourceBundle.getBundle("tourma/languages/language").getString("CLASSEMENT GÉNÉRAL"));
                        model = new mjtRankingIndiv(rounds, _tour.getParams()._ranking1, _tour.getParams()._ranking2, _tour.getParams()._ranking3, _tour.getParams()._ranking4, _tour.getParams()._ranking5, _tour.getCoachs(), _tour.getParams()._teamTournament);
                }
            }

            Vector rankLines = new Vector();
            Vector titles = new Vector();
            for (int i = 0; i < model.getColumnCount(); i++) {
                titles.add(model.getColumnName(i));
            }
            root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("TITLES"), titles);

            for (int i = 0; i < model.getRowCount(); i++) {
                HashMap line = new HashMap();
                Vector l = new Vector();
                for (int j = 0; j < model.getColumnCount(); j++) {
                    l.add(model.getValueAt(i, j));
                }
                line.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("COLS"), l);
                rankLines.add(line);
            }

            root.put(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("LINES"), rankLines);

            SimpleDateFormat format = new SimpleDateFormat("EEEEEEE dd MMMMMMMMMMM yyyy");
            SimpleDateFormat formatShort = new SimpleDateFormat("dd/MM/yyyy");
            root.put("dateGeneration", formatShort.format(new Date()));
            address = File.createTempFile(java.util.ResourceBundle.getBundle("tourma/languages/language").getString("RESULT") + format.format(new Date()), ".tmp");
            address.deleteOnExit();
            Writer out = new FileWriter(address);
            temp.process(root, out);
            out.flush();

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e.getLocalizedMessage());
        } catch (TemplateException e) {
            JOptionPane.showMessageDialog(this, e.getLocalizedMessage());
        } catch (URISyntaxException e) {
            JOptionPane.showMessageDialog(this, e.getLocalizedMessage());
        }
        return address;
    }
}
