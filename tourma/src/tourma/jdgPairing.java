/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jdgCoach.java
 *
 * Created on 10 mai 2010, 19:37:53
 */
package tourma;

import java.awt.DisplayMode;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import tourma.data.Coach;
import tourma.data.Match;
import tourma.data.Round;
import tourma.data.Team;
import tourma.tableModel.mjtMatches;
import tourma.utility.StringConstants;

/**
 *
 * @author Frederic Berger
 */
public class jdgPairing extends javax.swing.JDialog {

    Team mTeam1;
    Team mTeam2;
    Round mRound;
    ArrayList<String> mItems1;
    ArrayList<String> mItems2;
    HashMap<String, Coach> mCoachs;
    ArrayList<Match> mMatchs;

    /**
     * Creates new form jdgCoach
     */
    public jdgPairing(final java.awt.Frame parent,final  boolean modal,final  Team team1,final  Team team2, final Round round) {
        super(parent, modal);
        initComponents();

        final GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        final GraphicsDevice gs = ge.getDefaultScreenDevice();
        final DisplayMode dmode = gs.getDisplayMode();
        if (dmode != null) {
            final int screenWidth = dmode.getWidth();
           final  int screenHeight = dmode.getHeight();
            this.setLocation((screenWidth - this.getWidth()) / 2, (screenHeight - this.getHeight()) / 2);
        }

        mTeam1 = team1;
        mTeam2 = team2;
        mCoachs = new HashMap<String, Coach>();

        this.setTitle(team1.mName + java.util.ResourceBundle.getBundle(StringConstants.CS_LANGUAGE_RESOURCE).getString(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("tourma/languages/language").getString(" VS {0}"), team2.mName)));

        mRound = round;
        mMatchs = new ArrayList<Match>();

        mItems1 = new ArrayList();
        for (int i = 0; i < mTeam1.mCoachs.size(); i++) {
           final  Coach c = mTeam1.mCoachs.get(i);
            mItems1.add(c.mName + StringConstants.CS_THICK + c.mTeam + StringConstants.CS_THICK + c.mRoster.mName);
            mCoachs.put(c.mName + StringConstants.CS_THICK + c.mTeam + StringConstants.CS_THICK + c.mRoster.mName, c);
        }


        mItems2 = new ArrayList();
        for (int i = 0; i < mTeam1.mCoachs.size(); i++) {
            final Coach c = mTeam2.mCoachs.get(i);
            mItems2.add(c.mName + StringConstants.CS_THICK + c.mTeam + StringConstants.CS_THICK + c.mRoster.mName);
            mCoachs.put(c.mName + StringConstants.CS_THICK + c.mTeam + StringConstants.CS_THICK + c.mRoster.mName, c);
        }

        update();

    }

    private void update() {
        jcbTeam1.setModel(new DefaultComboBoxModel(mItems1.toArray()));
        jcbTeam2.setModel(new DefaultComboBoxModel(mItems2.toArray()));

       final  mjtMatches model = new mjtMatches(mMatchs, true, true, false);
        jtbMatches.setModel(model);
        jtbMatches.setDefaultRenderer(String.class, model);
        jtbMatches.setDefaultRenderer(Integer.class, model);

        jbtOK.setEnabled(mMatchs.size() == mTeam1.mCoachs.size());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"})
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtbMatches = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jbtOK = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jcbTeam1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jcbTeam2 = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jbtAdd = new javax.swing.JButton();
        jbtRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jtbMatches.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtbMatches);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jbtOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tourma/images/Select.png"))); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("tourma/languages/language"); // NOI18N
        jbtOK.setText(bundle.getString("OK")); // NOI18N
        jbtOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtOKActionPerformed(evt);
            }
        });
        jPanel2.add(jbtOK);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jcbTeam1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(jcbTeam1, java.awt.BorderLayout.WEST);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(bundle.getString("vs")); // NOI18N
        jPanel3.add(jLabel1, java.awt.BorderLayout.CENTER);

        jcbTeam2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(jcbTeam2, java.awt.BorderLayout.EAST);

        jbtAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tourma/images/Add.png"))); // NOI18N
        jbtAdd.setText(bundle.getString("Add")); // NOI18N
        jbtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddActionPerformed(evt);
            }
        });
        jPanel4.add(jbtAdd);

        jbtRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tourma/images/Close.png"))); // NOI18N
        jbtRemove.setText(bundle.getString("Remove")); // NOI18N
        jbtRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRemoveActionPerformed(evt);
            }
        });
        jPanel4.add(jbtRemove);

        jPanel3.add(jPanel4, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel3, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents
@SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jbtOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtOKActionPerformed

        for (int i = 0; i < mMatchs.size(); i++) {
            mRound.getMatchs().add(mMatchs.get(i));
        }
        this.setVisible(false);

    }//GEN-LAST:event_jbtOKActionPerformed
@SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jbtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddActionPerformed
        if (mItems1.size() > 0) {
            final Match m = new Match(mRound);
            m.mCoach1 = mCoachs.get((String) jcbTeam1.getSelectedItem());
            m.mCoach2 = mCoachs.get((String) jcbTeam2.getSelectedItem());
            mMatchs.add(m);
            mItems1.remove(jcbTeam1.getSelectedIndex());
            mItems2.remove(jcbTeam2.getSelectedIndex());
        }
        update();
    }//GEN-LAST:event_jbtAddActionPerformed
@SuppressWarnings({"PMD.UnusedFormalParameter", "PMD.MethodArgumentCouldBeFinal"})
    private void jbtRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRemoveActionPerformed

        if (jtbMatches.getSelectedRow() >= 0) {
            final Match m = mMatchs.get(jtbMatches.getSelectedRow());
            mItems1.add(m.mCoach1.mName + StringConstants.CS_THICK + m.mCoach1.mTeam + StringConstants.CS_THICK + m.mCoach1.mRoster.mName);
            mItems2.add(m.mCoach2.mName + StringConstants.CS_THICK + m.mCoach2.mTeam + StringConstants.CS_THICK + m.mCoach2.mRoster.mName);
            mMatchs.remove(jtbMatches.getSelectedRow());
        }
        update();
    }//GEN-LAST:event_jbtRemoveActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtAdd;
    private javax.swing.JButton jbtOK;
    private javax.swing.JButton jbtRemove;
    private javax.swing.JComboBox jcbTeam1;
    private javax.swing.JComboBox jcbTeam2;
    private javax.swing.JTable jtbMatches;
    // End of variables declaration//GEN-END:variables
}
