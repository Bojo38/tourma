/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on 10 mai 2010, 16:38:37
 */
package tourma;

import java.text.ParseException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Frederic Berger
 */
public class MainFrame extends javax.swing.JFrame {

    Tournament _tournament;

    /** Creates new form MainFrame */
    public MainFrame() {
        _tournament = Tournament.getTournament();
        this.setSize(800, 600);
        initComponents();



    }

    private void update() {
        jtfOrgas.setText(_tournament._params._tournament_orga);
        jtfTournamentName.setText(_tournament._params._tournament_name);
        jtffDraw.setValue(new Integer(_tournament._params._draw_points));
        jtffFoulNeg.setValue(new Integer(_tournament._params._bonus_neg_foul_points));
        jtffFoulPos.setValue(new Integer(_tournament._params._bonus_foul_points));
        jtffLargeVictory.setValue(new Integer(_tournament._params._large_victory_points));
        jtffLittleLost.setValue(new Integer(_tournament._params._little_lost_points));
        jtffLost.setValue(new Integer(_tournament._params._lost_points));
        jtffSorNeg.setValue(new Integer(_tournament._params._bonus_neg_sor_points));
        jtffSorPos.setValue(new Integer(_tournament._params._bonus_sor_points));
        jtffTdNeg.setValue(new Integer(_tournament._params._bonus_neg_td_points));
        jtffTdPos.setValue(new Integer(_tournament._params._bonus_td_points));
        jtffVictory.setValue(new Integer(_tournament._params._victory_points));

        jcbRank1.setSelectedIndex(_tournament._params._ranking1);
        jcbRank2.setSelectedIndex(_tournament._params._ranking2);
        jcbRank3.setSelectedIndex(_tournament._params._ranking3);
        jcbRank4.setSelectedIndex(_tournament._params._ranking4);
        jcbRank5.setSelectedIndex(_tournament._params._ranking5);

        mjtCoaches coachModel = new mjtCoaches(_tournament._coachs);
        jtbCoachs.setModel(coachModel);

        for (int i = 0; i < jtpRounds.getComponentCount(); i++) {
            Object o = jtpRounds.getComponentAt(i);
            if (o instanceof JPNRound) {
                ((JPNRound) o).update();
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtpMain = new javax.swing.JTabbedPane();
        jpnParameters = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfTournamentName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtfOrgas = new javax.swing.JTextField();
        jbtSave = new javax.swing.JButton();
        jbtLoad = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jtffLargeVictory = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jtffVictory = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jtffDraw = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jtffLittleLost = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jtffLost = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jtffTdPos = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jtffSorPos = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jtffFoulPos = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jtffTdNeg = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jtffSorNeg = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        jtffFoulNeg = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        jcbRank1 = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jcbRank2 = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jcbRank3 = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jcbRank4 = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        jcbRank5 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jbtAdd = new javax.swing.JButton();
        jbtRemove = new javax.swing.JButton();
        jbtModify = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbCoachs = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jbtFirstRound = new javax.swing.JButton();
        jpnMatchs = new javax.swing.JPanel();
        jtpRounds = new javax.swing.JTabbedPane();
        jpnRanking = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TOURnoi MAnager");

        jpnParameters.setLayout(new java.awt.GridLayout(1, 2));

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Tournoi"));
        jPanel5.setLayout(new java.awt.GridLayout(3, 2));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Nom du tournoi:");
        jPanel5.add(jLabel1);

        jtfTournamentName.setText("Ain Pacte");
        jtfTournamentName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfTournamentNameKeyPressed(evt);
            }
        });
        jPanel5.add(jtfTournamentName);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Organisateurs:");
        jPanel5.add(jLabel2);

        jtfOrgas.setText("Ain Pacte Team");
        jtfOrgas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfOrgasKeyPressed(evt);
            }
        });
        jPanel5.add(jtfOrgas);

        jbtSave.setText("Sauver le tournoi sous");
        jbtSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSaveActionPerformed(evt);
            }
        });
        jPanel5.add(jbtSave);

        jbtLoad.setText("Charger un tournoi");
        jbtLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtLoadActionPerformed(evt);
            }
        });
        jPanel5.add(jbtLoad);

        jPanel1.add(jPanel5, java.awt.BorderLayout.PAGE_START);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Classement"));
        jPanel6.setLayout(new java.awt.GridLayout(16, 2));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Large victoire:");
        jLabel3.setToolTipText("Nombre points pour unelarge victoire (2 Touchdowns d'écarts):");
        jPanel6.add(jLabel3);

        jtffLargeVictory.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffLargeVictory.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffLargeVictoryFocusLost(evt);
            }
        });
        jPanel6.add(jtffLargeVictory);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Victoire:");
        jLabel4.setToolTipText("Nombre points pour une victoire");
        jPanel6.add(jLabel4);

        jtffVictory.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffVictory.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffVictoryFocusLost(evt);
            }
        });
        jPanel6.add(jtffVictory);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Match nul:");
        jLabel5.setToolTipText("Nombre de points pour un match nul");
        jPanel6.add(jLabel5);

        jtffDraw.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffDraw.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffDrawFocusLost(evt);
            }
        });
        jPanel6.add(jtffDraw);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Petite défaite:");
        jLabel6.setToolTipText("Nombre de points pour une petite défaite (par un Touchdown d'écart)");
        jPanel6.add(jLabel6);

        jtffLittleLost.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffLittleLost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffLittleLostFocusLost(evt);
            }
        });
        jPanel6.add(jtffLittleLost);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Défaite:");
        jLabel7.setToolTipText("Nombre de points pour une petite défaite:");
        jPanel6.add(jLabel7);

        jtffLost.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffLost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffLostFocusLost(evt);
            }
        });
        jPanel6.add(jtffLost);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Touchdowns marqués:");
        jLabel8.setToolTipText("Nombre de points pour un touchdown");
        jPanel6.add(jLabel8);

        jtffTdPos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffTdPos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffTdPosFocusLost(evt);
            }
        });
        jPanel6.add(jtffTdPos);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel9.setText("Sorties réalisées:");
        jLabel9.setToolTipText("Nombre de points pour une sortie réalisée");
        jPanel6.add(jLabel9);

        jtffSorPos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffSorPos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffSorPosFocusLost(evt);
            }
        });
        jPanel6.add(jtffSorPos);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("Aggressions réussies:");
        jLabel10.setToolTipText("Nombre de points pour une sortie réussie sur aggression");
        jPanel6.add(jLabel10);

        jtffFoulPos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffFoulPos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffFoulPosFocusLost(evt);
            }
        });
        jPanel6.add(jtffFoulPos);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel11.setText("Touchdowns encaissés:");
        jLabel11.setToolTipText("Nombre de points (éventuellement négatifs) pour les touchdowns encaissés");
        jPanel6.add(jLabel11);

        jtffTdNeg.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffTdNeg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffTdNegFocusLost(evt);
            }
        });
        jPanel6.add(jtffTdNeg);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel12.setText("Sorties subies:");
        jLabel12.setToolTipText("Nombre de points (éventuellement négatif) pour les sorties subies");
        jPanel6.add(jLabel12);

        jtffSorNeg.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffSorNeg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffSorNegFocusLost(evt);
            }
        });
        jPanel6.add(jtffSorNeg);

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel13.setText("Aggressions subies:");
        jLabel13.setToolTipText("Nombre de points (éventuellement négatif) pour les sorties subies sur aggression");
        jPanel6.add(jLabel13);

        jtffFoulNeg.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jtffFoulNeg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffFoulNegFocusLost(evt);
            }
        });
        jPanel6.add(jtffFoulNeg);

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel14.setText("Critère de classement n°1:");
        jPanel6.add(jLabel14);

        jcbRank1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun", "Points", "Points adversaires", "Touchdowns", "Sorties", "Aggressions", "Différence de touchdowns", "Différence de sorties", "Différence d'aggression", "Victoire-Nul-Défaite" }));
        jcbRank1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRank1ActionPerformed(evt);
            }
        });
        jPanel6.add(jcbRank1);

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel15.setText("Critère de classement n°2:");
        jPanel6.add(jLabel15);

        jcbRank2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun", "Points", "Points adversaires", "Touchdowns", "Sorties", "Aggressions", "Différence de touchdowns", "Différence de sorties", "Différence d'aggression", "Victoire-Nul-Défaite" }));
        jcbRank2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRank2ActionPerformed(evt);
            }
        });
        jPanel6.add(jcbRank2);

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel16.setText("Critère de classement n°3:");
        jPanel6.add(jLabel16);

        jcbRank3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun", "Points", "Points adversaires", "Touchdowns", "Sorties", "Aggressions", "Différence de touchdowns", "Différence de sorties", "Différence d'aggression", "Victoire-Nul-Défaite" }));
        jcbRank3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRank3ActionPerformed(evt);
            }
        });
        jPanel6.add(jcbRank3);

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel17.setText("Critère de classement n°4:");
        jPanel6.add(jLabel17);

        jcbRank4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun", "Points", "Points adversaires", "Touchdowns", "Sorties", "Aggressions", "Différence de touchdowns", "Différence de sorties", "Différence d'aggression", "Victoire-Nul-Défaite" }));
        jcbRank4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRank4ActionPerformed(evt);
            }
        });
        jPanel6.add(jcbRank4);

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel18.setText("Critère de classement n°5:");
        jPanel6.add(jLabel18);

        jcbRank5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aucun", "Points", "Points adversaires", "Touchdowns", "Sorties", "Aggressions", "Différence de touchdowns", "Différence de sorties", "Différence d'aggression", "Victoire-Nul-Défaite" }));
        jcbRank5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRank5ActionPerformed(evt);
            }
        });
        jPanel6.add(jcbRank5);

        jPanel1.add(jPanel6, java.awt.BorderLayout.CENTER);

        jpnParameters.add(jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Coachs"));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jbtAdd.setText("Ajouter");
        jbtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddActionPerformed(evt);
            }
        });
        jPanel3.add(jbtAdd);

        jbtRemove.setText("Retirer");
        jbtRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRemoveActionPerformed(evt);
            }
        });
        jPanel3.add(jbtRemove);

        jbtModify.setText("Modifier");
        jbtModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtModifyActionPerformed(evt);
            }
        });
        jPanel3.add(jbtModify);

        jPanel2.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jtbCoachs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbCoachs.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jtbCoachs);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jbtFirstRound.setText("Générer la première ronde");
        jbtFirstRound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtFirstRoundActionPerformed(evt);
            }
        });
        jPanel4.add(jbtFirstRound);

        jPanel2.add(jPanel4, java.awt.BorderLayout.PAGE_END);

        jpnParameters.add(jPanel2);

        jtpMain.addTab("Paramètres du tournoi", jpnParameters);

        jpnMatchs.setLayout(new java.awt.BorderLayout());
        jpnMatchs.add(jtpRounds, java.awt.BorderLayout.CENTER);

        jtpMain.addTab("Matchs", jpnMatchs);

        javax.swing.GroupLayout jpnRankingLayout = new javax.swing.GroupLayout(jpnRanking);
        jpnRanking.setLayout(jpnRankingLayout);
        jpnRankingLayout.setHorizontalGroup(
            jpnRankingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 892, Short.MAX_VALUE)
        );
        jpnRankingLayout.setVerticalGroup(
            jpnRankingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 449, Short.MAX_VALUE)
        );

        jtpMain.addTab("Classements", jpnRanking);

        getContentPane().add(jtpMain, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfTournamentNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTournamentNameKeyPressed
        _tournament._params._tournament_name = jtfTournamentName.getText();
    }//GEN-LAST:event_jtfTournamentNameKeyPressed

    private void jtfOrgasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfOrgasKeyPressed
        _tournament._params._tournament_orga = jtfOrgas.getText();
    }//GEN-LAST:event_jtfOrgasKeyPressed

    private void jbtSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSaveActionPerformed
        JFileChooser jfc = new JFileChooser();
        if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            Tournament.getTournament().saveXML(jfc.getSelectedFile());
        }
    }//GEN-LAST:event_jbtSaveActionPerformed

    private void jtffLargeVictoryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffLargeVictoryFocusLost

        try {
            jtffLargeVictory.commitEdit();
            int points = ((Long) jtffLargeVictory.getValue()).intValue();
            _tournament._params._large_victory_points = points;
        } catch (ParseException e) {
            jtffLargeVictory.setValue(jtffLargeVictory.getValue());
        }
    }//GEN-LAST:event_jtffLargeVictoryFocusLost

    private void jcbRank1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRank1ActionPerformed
        _tournament._params._ranking1 = jcbRank1.getSelectedIndex();
    }//GEN-LAST:event_jcbRank1ActionPerformed

    private void jcbRank2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRank2ActionPerformed
        _tournament._params._ranking2 = jcbRank2.getSelectedIndex();
    }//GEN-LAST:event_jcbRank2ActionPerformed

    private void jcbRank3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRank3ActionPerformed
        _tournament._params._ranking4 = jcbRank4.getSelectedIndex();
    }//GEN-LAST:event_jcbRank3ActionPerformed

    private void jcbRank4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRank4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbRank4ActionPerformed

    private void jcbRank5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRank5ActionPerformed
        _tournament._params._ranking5 = jcbRank5.getSelectedIndex();
    }//GEN-LAST:event_jcbRank5ActionPerformed

    private void jtffVictoryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffVictoryFocusLost
        try {
            jtffVictory.commitEdit();
            int points = ((Long) jtffVictory.getValue()).intValue();
            _tournament._params._victory_points = points;
        } catch (ParseException e) {
            jtffVictory.setValue(jtffVictory.getValue());
        }
    }//GEN-LAST:event_jtffVictoryFocusLost

    private void jtffDrawFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffDrawFocusLost
        try {
            jtffDraw.commitEdit();
            int points = ((Long) jtffDraw.getValue()).intValue();
            _tournament._params._draw_points = points;
        } catch (ParseException e) {
            jtffDraw.setValue(jtffDraw.getValue());
        }
    }//GEN-LAST:event_jtffDrawFocusLost

    private void jtffLittleLostFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffLittleLostFocusLost
        try {
            jtffLittleLost.commitEdit();
            int points = ((Long) jtffLittleLost.getValue()).intValue();
            _tournament._params._little_lost_points = points;
        } catch (ParseException e) {
            jtffLittleLost.setValue(jtffLittleLost.getValue());
        }
    }//GEN-LAST:event_jtffLittleLostFocusLost

    private void jtffLostFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffLostFocusLost
        try {
            jtffLost.commitEdit();
            int points = ((Long) jtffLost.getValue()).intValue();
            _tournament._params._lost_points = points;
        } catch (ParseException e) {
            jtffLost.setValue(jtffLost.getValue());
        }
    }//GEN-LAST:event_jtffLostFocusLost

    private void jtffTdPosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffTdPosFocusLost
        try {
            jtffTdPos.commitEdit();
            int points = ((Long) jtffTdPos.getValue()).intValue();
            _tournament._params._bonus_td_points = points;
        } catch (ParseException e) {
            jtffTdPos.setValue(jtffTdPos.getValue());
        }
    }//GEN-LAST:event_jtffTdPosFocusLost

    private void jtffSorPosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffSorPosFocusLost
        try {
            jtffSorPos.commitEdit();
            int points = ((Long) jtffSorPos.getValue()).intValue();
            _tournament._params._bonus_sor_points = points;
        } catch (ParseException e) {
            jtffSorPos.setValue(jtffSorPos.getValue());
        }
    }//GEN-LAST:event_jtffSorPosFocusLost

    private void jtffFoulPosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffFoulPosFocusLost
        try {
            jtffFoulPos.commitEdit();
            int points = ((Long) jtffFoulPos.getValue()).intValue();
            _tournament._params._bonus_foul_points = points;
        } catch (ParseException e) {
            jtffFoulPos.setValue(jtffFoulPos.getValue());
        }
    }//GEN-LAST:event_jtffFoulPosFocusLost

    private void jtffTdNegFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffTdNegFocusLost
        try {
            jtffTdNeg.commitEdit();
            int points = ((Long) jtffTdNeg.getValue()).intValue();
            _tournament._params._bonus_neg_td_points = points;
        } catch (ParseException e) {
            jtffTdNeg.setValue(jtffTdNeg.getValue());
        }
    }//GEN-LAST:event_jtffTdNegFocusLost

    private void jtffSorNegFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffSorNegFocusLost
        try {
            jtffSorNeg.commitEdit();
            int points = ((Long) jtffSorNeg.getValue()).intValue();
            _tournament._params._bonus_neg_sor_points = points;
        } catch (ParseException e) {
            jtffSorNeg.setValue(jtffSorNeg.getValue());
        }
    }//GEN-LAST:event_jtffSorNegFocusLost

    private void jtffFoulNegFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffFoulNegFocusLost
        try {
            jtffFoulNeg.commitEdit();
            int points = ((Long) jtffFoulNeg.getValue()).intValue();
            _tournament._params._bonus_neg_foul_points = points;
        } catch (ParseException e) {
            jtffFoulNeg.setValue(jtffFoulNeg.getValue());
        }
    }//GEN-LAST:event_jtffFoulNegFocusLost

    private void jbtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddActionPerformed
        jdgCoach w = new jdgCoach(this, true);
        w.setVisible(true);
        update();
    }//GEN-LAST:event_jbtAddActionPerformed

    private void jbtRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRemoveActionPerformed
        _tournament._coachs.remove(jtbCoachs.getSelectedRow());
        update();
    }//GEN-LAST:event_jbtRemoveActionPerformed

    private void jbtLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtLoadActionPerformed
        JFileChooser jfc = new JFileChooser();
        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            Tournament.getTournament().loadXML(jfc.getSelectedFile());
            jtpRounds.removeAll();
            for (int i = 0; i < _tournament._rounds.size(); i++) {
                JPNRound jpnr = new JPNRound(_tournament._rounds.get(i), _tournament);
                jtpRounds.add("Ronde " + (i + 1), jpnr);
            }
            update();

        }
    }//GEN-LAST:event_jbtLoadActionPerformed

    private void jbtModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtModifyActionPerformed

        if (jtbCoachs.getSelectedRow() >= 0) {
            jdgCoach w = new jdgCoach(this, true, _tournament._coachs.get(jtbCoachs.getSelectedRow()));
            w.setVisible(true);
            update();
        }
    }//GEN-LAST:event_jbtModifyActionPerformed

    private void jbtFirstRoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtFirstRoundActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Etes vous sûr ? Cela va effacer toutes les rondes", "Première ronde", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (_tournament._coachs.size() % 2 > 0) {
                JOptionPane.showMessageDialog(this, "Nombre impair de joueurs");
            } else {
                _tournament.generateFirstRound();
                jtpRounds.removeAll();
                for (int i = 0; i < _tournament._rounds.size(); i++) {
                    JPNRound jpnr = new JPNRound(_tournament._rounds.get(i), _tournament);
                    jtpRounds.add("Ronde " + (i + 1), jpnr);
                }
                update();
            }
        }
    }//GEN-LAST:event_jbtFirstRoundActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                MainFrame.getMainFrame().setVisible(true);
            }
        });
    }
    protected static MainFrame _singleton;

    public static MainFrame getMainFrame() {
        if (_singleton == null) {
            _singleton = new MainFrame();
        }
        return _singleton;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtAdd;
    private javax.swing.JButton jbtFirstRound;
    private javax.swing.JButton jbtLoad;
    private javax.swing.JButton jbtModify;
    private javax.swing.JButton jbtRemove;
    private javax.swing.JButton jbtSave;
    private javax.swing.JComboBox jcbRank1;
    private javax.swing.JComboBox jcbRank2;
    private javax.swing.JComboBox jcbRank3;
    private javax.swing.JComboBox jcbRank4;
    private javax.swing.JComboBox jcbRank5;
    private javax.swing.JPanel jpnMatchs;
    private javax.swing.JPanel jpnParameters;
    private javax.swing.JPanel jpnRanking;
    private javax.swing.JTable jtbCoachs;
    private javax.swing.JTextField jtfOrgas;
    private javax.swing.JTextField jtfTournamentName;
    private javax.swing.JFormattedTextField jtffDraw;
    private javax.swing.JFormattedTextField jtffFoulNeg;
    private javax.swing.JFormattedTextField jtffFoulPos;
    private javax.swing.JFormattedTextField jtffLargeVictory;
    private javax.swing.JFormattedTextField jtffLittleLost;
    private javax.swing.JFormattedTextField jtffLost;
    private javax.swing.JFormattedTextField jtffSorNeg;
    private javax.swing.JFormattedTextField jtffSorPos;
    private javax.swing.JFormattedTextField jtffTdNeg;
    private javax.swing.JFormattedTextField jtffTdPos;
    private javax.swing.JFormattedTextField jtffVictory;
    private javax.swing.JTabbedPane jtpMain;
    private javax.swing.JTabbedPane jtpRounds;
    // End of variables declaration//GEN-END:variables
}
